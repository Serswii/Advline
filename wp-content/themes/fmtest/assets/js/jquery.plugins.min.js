/**
 * jQuery tabs v1.1.0
 * Copyright (c) 2016 JetCoders
 * email: yuriy.shpak@jetcoders.com
 * www: JetCoders.com
 * Licensed under the MIT License:
 * http://www.opensource.org/licenses/mit-license.php
 **/

;(function ($) {
    var _error = function (text) {
        if (typeof console == "object") console.warn(text)
    }, _setTab = function (data, tab) {
        data.links.removeClass(data.activeTab).filter('[data-tab="' + tab + '"]').addClass(data.activeTab);
        data.boxes.removeClass(data.visibleClass + " " + data.hiddenClass).addClass(data.hiddenClass).filter(tab).addClass(data.visibleClass);
        if (data.steps) {
            if (data.maxStep < data.steps.index(data.steps.filter("." + data.activeTab))) data.maxStep = data.steps.index(data.steps.filter("." + data.activeTab));
            data.steps.removeClass(data.disabledTab);
            for (var i = data.maxStep + 1; i <= data.steps.length; i++) data.steps.eq(i).addClass(data.disabledTab)
        }
        data.onChange();
        $(window).trigger("resize")
    }, _initEvents = function (data) {
        data.links.bind("click.tabs", function () {
            if (!$(this).hasClass(data.disabledTab)) _setTab(data, $(this).data("tab"));
            return false
        })
    }, methods = {
        init: function (options) {
            return this.each(function () {
                var $this = $(this);
                $this.data("tabs", jQuery.extend({}, defaults, options));
                var data = $this.data("tabs");
                data.context = $this;
                data.links = $this.find("[data-tab]").not(".detected").addClass("detected");
                data.boxes = $();
                if (data.steps) {
                    data.steps = $this.find(data.steps).eq(0).find("[data-tab]");
                    data.maxStep = data.steps.index(data.steps.filter("." + data.activeTab))
                }
                data.links.each(function () {
                    data.boxes = data.boxes.add($($(this).data("tab")))
                });
                _setTab(data, data.links.filter("." + data.activeTab).eq(0).data("tab"));
                _initEvents(data)
            })
        }, setTab: function (tab) {
            return this.each(function () {
                var $this = $(this), data = $this.data("tabs");
                if (data && typeof tab == "string") _setTab(data, tab); else _error("Second param need to be String")
            })
        },
        option: function (name, set) {
            if (set) return this.each(function () {
                var data = $(this).data("tabs");
                if (data) data[name] = set
            }); else {
                var ar = [];
                this.each(function () {
                    var data = $(this).data("tabs");
                    if (data) ar.push(data[name])
                });
                return ar.length > 1 ? ar : ar[0]
            }
        }, destroy: function () {
            return this.each(function () {
                var $this = $(this), data = $this.data("tabs");
                if (data) {
                    data.context.find("*").unbind(".tabs").removeClass(data.hiddenClass + " " + data.visibleClass);
                    $(window).unbind(".tabs");
                    $this.removeData("tabs")
                }
            })
        }
    }, defaults = {
        hiddenClass: "hidden",
        visibleClass: "visible", activeTab: "active", disabledTab: "disabled", steps: false, onChange: function () {
        }
    };
    $.fn.tabs = function (method) {
        if (methods[method]) return methods[method].apply(this, Array.prototype.slice.call(arguments, 1)); else if (typeof method === "object" || !method) return methods.init.apply(this, arguments); else _error("Method " + method + " does not exist on jQuery.tabs")
    }
})(jQuery);

/*!
 * JavaScript Custom Forms
 *
 * Copyright 2014-2015 PSD2HTML - http://psd2html.com/jcf
 * Released under the MIT license (LICENSE.txt)
 *
 * Version: 1.2.3
 */
!function (e, t) {
    "use strict";
    "function" == typeof define && define.amd ? define(["jquery"], t) : "object" == typeof exports ? module.exports = t(require("jquery")) : e.jcf = t(jQuery)
}(this, function (e) {
    "use strict";
    var t = "1.2.3", n = [], o = {
            optionsKey: "jcf",
            dataKey: "jcf-instance",
            rtlClass: "jcf-rtl",
            focusClass: "jcf-focus",
            pressedClass: "jcf-pressed",
            disabledClass: "jcf-disabled",
            hiddenClass: "jcf-hidden",
            resetAppearanceClass: "jcf-reset-appearance",
            unselectableClass: "jcf-unselectable"
        }, a = "ontouchstart" in window || window.DocumentTouch && document instanceof window.DocumentTouch,
        i = /Windows Phone/.test(navigator.userAgent);
    o.isMobileDevice = !(!a && !i);
    var r = function () {
        var t = e("<style>").appendTo("head"), n = t.prop("sheet") || t.prop("styleSheet"), a = function (e, t, o) {
            o = o || 0, n.insertRule ? n.insertRule(e + "{" + t + "}", o) : n.addRule(e, t, o)
        };
        a("." + o.hiddenClass, "position:absolute !important;left:-9999px !important;height:1px !important;width:1px !important;margin:0 !important;border-width:0 !important;-webkit-appearance:none;-moz-appearance:none;appearance:none"), a("." + o.rtlClass + " ." + o.hiddenClass, "right:-9999px !important; left: auto !important"), a("." + o.unselectableClass, "-webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; -webkit-tap-highlight-color: rgba(0,0,0,0);"), a("." + o.resetAppearanceClass, "background: none; border: none; -webkit-appearance: none; appearance: none; opacity: 0; filter: alpha(opacity=0);");
        var i = e("html"), r = e("body");
        "rtl" !== i.css("direction") && "rtl" !== r.css("direction") || i.addClass(o.rtlClass), i.on("reset", function () {
            setTimeout(function () {
                c.refreshAll()
            }, 0)
        }), o.styleSheetCreated = !0
    };
    !function () {
        var t, n = navigator.pointerEnabled || navigator.msPointerEnabled,
            o = "ontouchstart" in window || window.DocumentTouch && document instanceof window.DocumentTouch, a = {},
            i = "jcf-";
        t = n ? {
            pointerover: navigator.pointerEnabled ? "pointerover" : "MSPointerOver",
            pointerdown: navigator.pointerEnabled ? "pointerdown" : "MSPointerDown",
            pointermove: navigator.pointerEnabled ? "pointermove" : "MSPointerMove",
            pointerup: navigator.pointerEnabled ? "pointerup" : "MSPointerUp"
        } : {
            pointerover: "mouseover",
            pointerdown: "mousedown" + (o ? " touchstart" : ""),
            pointermove: "mousemove" + (o ? " touchmove" : ""),
            pointerup: "mouseup" + (o ? " touchend" : "")
        }, e.each(t, function (t, n) {
            e.each(n.split(" "), function (e, n) {
                a[n] = t
            })
        }), e.each(t, function (t, n) {
            n = n.split(" "), e.event.special[i + t] = {
                setup: function () {
                    var t = this;
                    e.each(n, function (e, n) {
                        t.addEventListener ? t.addEventListener(n, c, !1) : t["on" + n] = c
                    })
                }, teardown: function () {
                    var t = this;
                    e.each(n, function (e, n) {
                        t.addEventListener ? t.removeEventListener(n, c, !1) : t["on" + n] = null
                    })
                }
            }
        });
        var r = null, s = function (e) {
            var t = Math.abs(e.pageX - r.x), n = Math.abs(e.pageY - r.y), o = 25;
            return o >= t && o >= n ? !0 : void 0
        }, c = function (t) {
            var n = t || window.event, o = null, c = a[n.type];
            if (t = e.event.fix(n), t.type = i + c, n.pointerType) switch (n.pointerType) {
                case 2:
                    t.pointerType = "touch";
                    break;
                case 3:
                    t.pointerType = "pen";
                    break;
                case 4:
                    t.pointerType = "mouse";
                    break;
                default:
                    t.pointerType = n.pointerType
            } else t.pointerType = n.type.substr(0, 5);
            return t.pageX || t.pageY || (o = n.changedTouches ? n.changedTouches[0] : n, t.pageX = o.pageX, t.pageY = o.pageY), "touchend" === n.type && (r = {
                x: t.pageX,
                y: t.pageY
            }), "mouse" === t.pointerType && r && s(t) ? void 0 : (e.event.dispatch || e.event.handle).call(this, t)
        }
    }(), function () {
        var t = ("onwheel" in document || document.documentMode >= 9 ? "wheel" : "mousewheel DOMMouseScroll").split(" "),
            n = "jcf-mousewheel";
        e.event.special[n] = {
            setup: function () {
                var n = this;
                e.each(t, function (e, t) {
                    n.addEventListener ? n.addEventListener(t, o, !1) : n["on" + t] = o
                })
            }, teardown: function () {
                var n = this;
                e.each(t, function (e, t) {
                    n.addEventListener ? n.removeEventListener(t, o, !1) : n["on" + t] = null
                })
            }
        };
        var o = function (t) {
            var o = t || window.event;
            if (t = e.event.fix(o), t.type = n, "detail" in o && (t.deltaY = -o.detail), "wheelDelta" in o && (t.deltaY = -o.wheelDelta), "wheelDeltaY" in o && (t.deltaY = -o.wheelDeltaY), "wheelDeltaX" in o && (t.deltaX = -o.wheelDeltaX), "deltaY" in o && (t.deltaY = o.deltaY), "deltaX" in o && (t.deltaX = o.deltaX), t.delta = t.deltaY || t.deltaX, 1 === o.deltaMode) {
                var a = 16;
                t.delta *= a, t.deltaY *= a, t.deltaX *= a
            }
            return (e.event.dispatch || e.event.handle).call(this, t)
        }
    }();
    var s = {
        fireNativeEvent: function (t, n) {
            e(t).each(function () {
                var e, t = this;
                t.dispatchEvent ? (e = document.createEvent("HTMLEvents"), e.initEvent(n, !0, !0), t.dispatchEvent(e)) : document.createEventObject && (e = document.createEventObject(), e.target = t, t.fireEvent("on" + n, e))
            })
        }, bindHandlers: function () {
            var t = this;
            e.each(t, function (n, o) {
                0 === n.indexOf("on") && e.isFunction(o) && (t[n] = function () {
                    return o.apply(t, arguments)
                })
            })
        }
    }, c = {
        version: t, modules: {}, getOptions: function () {
            return e.extend({}, o)
        }, setOptions: function (t, n) {
            arguments.length > 1 ? this.modules[t] && e.extend(this.modules[t].prototype.options, n) : e.extend(o, t)
        }, addModule: function (t) {
            e.isFunction(t) && (t = t(e, window));
            var a = function (t) {
                t.element.data(o.dataKey) || t.element.data(o.dataKey, this), n.push(this), this.options = e.extend({}, o, this.options, i(t.element), t), this.bindHandlers(), this.init.apply(this, arguments)
            }, i = function (t) {
                var n = t.data(o.optionsKey), a = t.attr(o.optionsKey);
                if (n) return n;
                if (a) try {
                    return e.parseJSON(a)
                } catch (i) {
                }
            };
            a.prototype = t, e.extend(t, s), t.plugins && e.each(t.plugins, function (t, n) {
                e.extend(n.prototype, s)
            });
            var r = a.prototype.destroy;
            a.prototype.destroy = function () {
                this.options.element.removeData(this.options.dataKey);
                for (var e = n.length - 1; e >= 0; e--) if (n[e] === this) {
                    n.splice(e, 1);
                    break
                }
                r && r.apply(this, arguments)
            }, this.modules[t.name] = a
        }, getInstance: function (t) {
            return e(t).data(o.dataKey)
        }, replace: function (t, n, a) {
            var i, s = this;
            return o.styleSheetCreated || r(), e(t).each(function () {
                var t, r = e(this);
                i = r.data(o.dataKey), i ? i.refresh() : (n || e.each(s.modules, function (e, t) {
                    return t.prototype.matchElement.call(t.prototype, r) ? (n = e, !1) : void 0
                }), n && (t = e.extend({element: r}, a), i = new s.modules[n](t)))
            }), i
        }, refresh: function (t) {
            e(t).each(function () {
                var t = e(this).data(o.dataKey);
                t && t.refresh()
            })
        }, destroy: function (t) {
            e(t).each(function () {
                var t = e(this).data(o.dataKey);
                t && t.destroy()
            })
        }, replaceAll: function (t) {
            var n = this;
            e.each(this.modules, function (o, a) {
                e(a.prototype.selector, t).each(function () {
                    this.className.indexOf("jcf-ignore") < 0 && n.replace(this, o)
                })
            })
        }, refreshAll: function (t) {
            if (t) e.each(this.modules, function (n, a) {
                e(a.prototype.selector, t).each(function () {
                    var t = e(this).data(o.dataKey);
                    t && t.refresh()
                })
            }); else for (var a = n.length - 1; a >= 0; a--) n[a].refresh()
        }, destroyAll: function (t) {
            if (t) e.each(this.modules, function (n, a) {
                e(a.prototype.selector, t).each(function (t, n) {
                    var a = e(n).data(o.dataKey);
                    a && a.destroy()
                })
            }); else for (; n.length;) n[0].destroy()
        }
    };
    return "function" == typeof define && define.amd && (window.jcf = c), c
});

/*!
 * JavaScript Custom Forms : Scrollbar Module
 *
 * Copyright 2014-2015 PSD2HTML - http://psd2html.com/jcf
 * Released under the MIT license (LICENSE.txt)
 *
 * Version: 1.2.3
 */
!function (t) {
    t.addModule(function (t, e) {
        "use strict";

        function i(e) {
            this.options = t.extend({
                holder: null,
                vertical: !0,
                inactiveClass: "jcf-inactive",
                verticalClass: "jcf-scrollbar-vertical",
                horizontalClass: "jcf-scrollbar-horizontal",
                scrollbarStructure: '<div class="jcf-scrollbar"><div class="jcf-scrollbar-dec"></div><div class="jcf-scrollbar-slider"><div class="jcf-scrollbar-handle"></div></div><div class="jcf-scrollbar-inc"></div></div>',
                btnDecSelector: ".jcf-scrollbar-dec",
                btnIncSelector: ".jcf-scrollbar-inc",
                sliderSelector: ".jcf-scrollbar-slider",
                handleSelector: ".jcf-scrollbar-handle",
                scrollInterval: 300,
                scrollStep: 400
            }, e), this.init()
        }

        var s = {
            name: "Scrollable",
            selector: ".jcf-scrollable",
            plugins: {ScrollBar: i},
            options: {
                mouseWheelStep: 150,
                handleResize: !0,
                alwaysShowScrollbars: !1,
                alwaysPreventMouseWheel: !1,
                scrollAreaStructure: '<div class="jcf-scrollable-wrapper"></div>'
            },
            matchElement: function (t) {
                return t.is(".jcf-scrollable")
            },
            init: function () {
                this.initStructure(), this.attachEvents(), this.rebuildScrollbars()
            },
            initStructure: function () {
                this.doc = t(document), this.win = t(e), this.realElement = t(this.options.element), this.scrollWrapper = t(this.options.scrollAreaStructure).insertAfter(this.realElement), this.scrollWrapper.css("position", "relative"), this.realElement.css("overflow", "hidden"), this.vBarEdge = 0
            },
            attachEvents: function () {
                var t = this;
                this.vBar = new i({
                    holder: this.scrollWrapper, vertical: !0, onScroll: function (e) {
                        t.realElement.scrollTop(e)
                    }
                }), this.hBar = new i({
                    holder: this.scrollWrapper, vertical: !1, onScroll: function (e) {
                        t.realElement.scrollLeft(e)
                    }
                }), this.realElement.on("scroll", this.onScroll), this.options.handleResize && this.win.on("resize orientationchange load", this.onResize), this.realElement.on("jcf-mousewheel", this.onMouseWheel), this.realElement.on("jcf-pointerdown", this.onTouchBody)
            },
            onScroll: function () {
                this.redrawScrollbars()
            },
            onResize: function () {
                t(document.activeElement).is(":input") || this.rebuildScrollbars()
            },
            onTouchBody: function (t) {
                "touch" === t.pointerType && (this.touchData = {
                    scrollTop: this.realElement.scrollTop(),
                    scrollLeft: this.realElement.scrollLeft(),
                    left: t.pageX,
                    top: t.pageY
                }, this.doc.on({"jcf-pointermove": this.onMoveBody, "jcf-pointerup": this.onReleaseBody}))
            },
            onMoveBody: function (t) {
                var e, i, s = this.verticalScrollActive, o = this.horizontalScrollActive;
                "touch" === t.pointerType && (e = this.touchData.scrollTop - t.pageY + this.touchData.top, i = this.touchData.scrollLeft - t.pageX + this.touchData.left, this.verticalScrollActive && (0 > e || e > this.vBar.maxValue) && (s = !1), this.horizontalScrollActive && (0 > i || i > this.hBar.maxValue) && (o = !1), this.realElement.scrollTop(e), this.realElement.scrollLeft(i), s || o ? t.preventDefault() : this.onReleaseBody(t))
            },
            onReleaseBody: function (t) {
                "touch" === t.pointerType && (delete this.touchData, this.doc.off({
                    "jcf-pointermove": this.onMoveBody,
                    "jcf-pointerup": this.onReleaseBody
                }))
            },
            onMouseWheel: function (t) {
                var e, i, s, o = this.realElement.scrollTop(), l = this.realElement.scrollLeft(),
                    r = this.realElement.prop("scrollHeight") - this.embeddedDimensions.innerHeight,
                    n = this.realElement.prop("scrollWidth") - this.embeddedDimensions.innerWidth;
                (this.options.alwaysPreventMouseWheel || (this.verticalScrollActive && t.deltaY && (0 >= o && t.deltaY < 0 || o >= r && t.deltaY > 0 || (s = !0)), this.horizontalScrollActive && t.deltaX && (0 >= l && t.deltaX < 0 || l >= n && t.deltaX > 0 || (s = !0)), this.verticalScrollActive || this.horizontalScrollActive)) && (s || this.options.alwaysPreventMouseWheel) && (t.preventDefault(), e = t.deltaX / 100 * this.options.mouseWheelStep, i = t.deltaY / 100 * this.options.mouseWheelStep, this.realElement.scrollTop(o + i), this.realElement.scrollLeft(l + e))
            },
            setScrollBarEdge: function (t) {
                this.vBarEdge = t || 0, this.redrawScrollbars()
            },
            saveElementDimensions: function () {
                return this.savedDimensions = {top: this.realElement.width(), left: this.realElement.height()}, this
            },
            restoreElementDimensions: function () {
                return this.savedDimensions && this.realElement.css({
                    width: this.savedDimensions.width,
                    height: this.savedDimensions.height
                }), this
            },
            saveScrollOffsets: function () {
                return this.savedOffsets = {
                    top: this.realElement.scrollTop(),
                    left: this.realElement.scrollLeft()
                }, this
            },
            restoreScrollOffsets: function () {
                return this.savedOffsets && (this.realElement.scrollTop(this.savedOffsets.top), this.realElement.scrollLeft(this.savedOffsets.left)), this
            },
            getContainerDimensions: function () {
                var t, e, i, s;
                return this.isModifiedStyles ? t = {
                    width: this.realElement.innerWidth() + this.vBar.getThickness(),
                    height: this.realElement.innerHeight() + this.hBar.getThickness()
                } : (this.saveElementDimensions().saveScrollOffsets(), this.realElement.insertAfter(this.scrollWrapper), this.scrollWrapper.detach(), e = this.realElement.prop("style"), s = parseFloat(e.width), i = parseFloat(e.height), this.embeddedDimensions && s && i && (this.isModifiedStyles |= s !== this.embeddedDimensions.width || i !== this.embeddedDimensions.height, this.realElement.css({
                    overflow: "",
                    width: "",
                    height: ""
                })), t = {
                    width: this.realElement.outerWidth(),
                    height: this.realElement.outerHeight()
                }, this.scrollWrapper.insertAfter(this.realElement), this.realElement.css("overflow", "hidden").prependTo(this.scrollWrapper), this.restoreElementDimensions().restoreScrollOffsets()), t
            },
            getEmbeddedDimensions: function (e) {
                var i, s = this.vBar.getThickness(), o = this.hBar.getThickness(),
                    l = this.realElement.outerWidth() - this.realElement.width(),
                    r = this.realElement.outerHeight() - this.realElement.height();
                return this.options.alwaysShowScrollbars ? (this.verticalScrollActive = !0, this.horizontalScrollActive = !0, i = {
                    innerWidth: e.width - s,
                    innerHeight: e.height - o
                }) : (this.saveElementDimensions(), this.verticalScrollActive = !1, this.horizontalScrollActive = !1, this.realElement.css({
                    width: e.width - l,
                    height: e.height - r
                }), this.horizontalScrollActive = this.realElement.prop("scrollWidth") > this.containerDimensions.width, this.verticalScrollActive = this.realElement.prop("scrollHeight") > this.containerDimensions.height, this.restoreElementDimensions(), i = {
                    innerWidth: e.width - (this.verticalScrollActive ? s : 0),
                    innerHeight: e.height - (this.horizontalScrollActive ? o : 0)
                }), t.extend(i, {width: i.innerWidth - l, height: i.innerHeight - r}), i
            },
            rebuildScrollbars: function () {
                this.containerDimensions = this.getContainerDimensions(), this.embeddedDimensions = this.getEmbeddedDimensions(this.containerDimensions), this.scrollWrapper.css({
                    width: this.containerDimensions.width,
                    height: this.containerDimensions.height
                }), this.realElement.css({
                    overflow: "hidden",
                    width: this.embeddedDimensions.width,
                    height: this.embeddedDimensions.height
                }), this.redrawScrollbars()
            },
            redrawScrollbars: function () {
                var t, e;
                this.verticalScrollActive ? (t = this.vBarEdge ? this.containerDimensions.height - this.vBarEdge : this.embeddedDimensions.innerHeight, e = Math.max(this.realElement.prop("offsetHeight"), this.realElement.prop("scrollHeight")) - this.vBarEdge, this.vBar.show().setMaxValue(e - t).setRatio(t / e).setSize(t), this.vBar.setValue(this.realElement.scrollTop())) : this.vBar.hide(), this.horizontalScrollActive ? (t = this.embeddedDimensions.innerWidth, e = this.realElement.prop("scrollWidth"), e === t && (this.horizontalScrollActive = !1), this.hBar.show().setMaxValue(e - t).setRatio(t / e).setSize(t), this.hBar.setValue(this.realElement.scrollLeft())) : this.hBar.hide();
                var i = "";
                this.verticalScrollActive && this.horizontalScrollActive ? i = "none" : this.verticalScrollActive ? i = "pan-x" : this.horizontalScrollActive && (i = "pan-y"), this.realElement.css("touchAction", i)
            },
            refresh: function () {
                this.rebuildScrollbars()
            },
            destroy: function () {
                this.win.off("resize orientationchange load", this.onResize), this.realElement.off({
                    "jcf-mousewheel": this.onMouseWheel,
                    "jcf-pointerdown": this.onTouchBody
                }), this.doc.off({
                    "jcf-pointermove": this.onMoveBody,
                    "jcf-pointerup": this.onReleaseBody
                }), this.saveScrollOffsets(), this.vBar.destroy(), this.hBar.destroy(), this.realElement.insertAfter(this.scrollWrapper).css({
                    touchAction: "",
                    overflow: "",
                    width: "",
                    height: ""
                }), this.scrollWrapper.remove(), this.restoreScrollOffsets()
            }
        };
        return t.extend(i.prototype, {
            init: function () {
                this.initStructure(), this.attachEvents()
            }, initStructure: function () {
                this.doc = t(document), this.isVertical = !!this.options.vertical, this.sizeProperty = this.isVertical ? "height" : "width", this.fullSizeProperty = this.isVertical ? "outerHeight" : "outerWidth", this.invertedSizeProperty = this.isVertical ? "width" : "height", this.thicknessMeasureMethod = "outer" + this.invertedSizeProperty.charAt(0).toUpperCase() + this.invertedSizeProperty.substr(1), this.offsetProperty = this.isVertical ? "top" : "left", this.offsetEventProperty = this.isVertical ? "pageY" : "pageX", this.value = this.options.value || 0, this.maxValue = this.options.maxValue || 0, this.currentSliderSize = 0, this.handleSize = 0, this.holder = t(this.options.holder), this.scrollbar = t(this.options.scrollbarStructure).appendTo(this.holder), this.btnDec = this.scrollbar.find(this.options.btnDecSelector), this.btnInc = this.scrollbar.find(this.options.btnIncSelector), this.slider = this.scrollbar.find(this.options.sliderSelector), this.handle = this.slider.find(this.options.handleSelector), this.scrollbar.addClass(this.isVertical ? this.options.verticalClass : this.options.horizontalClass).css({
                    touchAction: this.isVertical ? "pan-x" : "pan-y",
                    position: "absolute"
                }), this.slider.css({position: "relative"}), this.handle.css({
                    touchAction: "none",
                    position: "absolute"
                })
            }, attachEvents: function () {
                this.bindHandlers(), this.handle.on("jcf-pointerdown", this.onHandlePress), this.slider.add(this.btnDec).add(this.btnInc).on("jcf-pointerdown", this.onButtonPress)
            }, onHandlePress: function (t) {
                "mouse" === t.pointerType && t.button > 1 || (t.preventDefault(), this.handleDragActive = !0, this.sliderOffset = this.slider.offset()[this.offsetProperty], this.innerHandleOffset = t[this.offsetEventProperty] - this.handle.offset()[this.offsetProperty], this.doc.on("jcf-pointermove", this.onHandleDrag), this.doc.on("jcf-pointerup", this.onHandleRelease))
            }, onHandleDrag: function (t) {
                t.preventDefault(), this.calcOffset = t[this.offsetEventProperty] - this.sliderOffset - this.innerHandleOffset, this.setValue(this.calcOffset / (this.currentSliderSize - this.handleSize) * this.maxValue), this.triggerScrollEvent(this.value)
            }, onHandleRelease: function () {
                this.handleDragActive = !1, this.doc.off("jcf-pointermove", this.onHandleDrag), this.doc.off("jcf-pointerup", this.onHandleRelease)
            }, onButtonPress: function (t) {
                var e, i;
                "mouse" === t.pointerType && t.button > 1 || (t.preventDefault(), this.handleDragActive || (this.slider.is(t.currentTarget) ? (e = this.handle.offset()[this.offsetProperty] > t[this.offsetEventProperty] ? -1 : 1, i = t[this.offsetEventProperty] - this.slider.offset()[this.offsetProperty], this.startPageScrolling(e, i)) : (e = this.btnDec.is(t.currentTarget) ? -1 : 1, this.startSmoothScrolling(e)), this.doc.on("jcf-pointerup", this.onButtonRelease)))
            }, onButtonRelease: function () {
                this.stopPageScrolling(), this.stopSmoothScrolling(), this.doc.off("jcf-pointerup", this.onButtonRelease)
            }, startPageScrolling: function (t, e) {
                var i = this, s = t * i.currentSize, o = function () {
                    var s = i.value / i.maxValue * (i.currentSliderSize - i.handleSize);
                    return t > 0 ? s + i.handleSize >= e : e >= s
                }, l = function () {
                    i.value += s, i.setValue(i.value), i.triggerScrollEvent(i.value), o() && clearInterval(i.pageScrollTimer)
                };
                this.pageScrollTimer = setInterval(l, this.options.scrollInterval), l()
            }, stopPageScrolling: function () {
                clearInterval(this.pageScrollTimer)
            }, startSmoothScrolling: function (t) {
                var i, s = this;
                this.stopSmoothScrolling();
                var o = e.requestAnimationFrame || function (t) {
                    setTimeout(t, 16)
                }, l = function () {
                    return Date.now ? Date.now() : (new Date).getTime()
                }, r = function () {
                    return t > 0 ? s.value >= s.maxValue : s.value <= 0
                }, n = function () {
                    var e = (l() - i) / 1e3 * s.options.scrollStep;
                    s.smoothScrollActive && (s.value += e * t, s.setValue(s.value), s.triggerScrollEvent(s.value), r() || (i = l(), o(n)))
                };
                s.smoothScrollActive = !0, i = l(), o(n)
            }, stopSmoothScrolling: function () {
                this.smoothScrollActive = !1
            }, triggerScrollEvent: function (t) {
                this.options.onScroll && this.options.onScroll(t)
            }, getThickness: function () {
                return this.scrollbar[this.thicknessMeasureMethod]()
            }, setSize: function (t) {
                var e = this.btnDec[this.fullSizeProperty](), i = this.btnInc[this.fullSizeProperty]();
                return this.currentSize = t, this.currentSliderSize = t - e - i, this.scrollbar.css(this.sizeProperty, t), this.slider.css(this.sizeProperty, this.currentSliderSize), this.currentSliderSize = this.slider[this.sizeProperty](), this.handleSize = Math.round(this.currentSliderSize * this.ratio), this.handle.css(this.sizeProperty, this.handleSize), this.handleSize = this.handle[this.fullSizeProperty](), this
            }, setRatio: function (t) {
                return this.ratio = t, this
            }, setMaxValue: function (t) {
                return this.maxValue = t, this.setValue(Math.min(this.value, this.maxValue)), this
            }, setValue: function (t) {
                this.value = t, this.value < 0 ? this.value = 0 : this.value > this.maxValue && (this.value = this.maxValue), this.refresh()
            }, setPosition: function (t) {
                return this.scrollbar.css(t), this
            }, hide: function () {
                return this.scrollbar.detach(), this
            }, show: function () {
                return this.scrollbar.appendTo(this.holder), this
            }, refresh: function () {
                0 === this.value || 0 === this.maxValue ? this.calcOffset = 0 : this.calcOffset = this.value / this.maxValue * (this.currentSliderSize - this.handleSize), this.handle.css(this.offsetProperty, this.calcOffset), this.btnDec.toggleClass(this.options.inactiveClass, 0 === this.value), this.btnInc.toggleClass(this.options.inactiveClass, this.value === this.maxValue), this.scrollbar.toggleClass(this.options.inactiveClass, 0 === this.maxValue)
            }, destroy: function () {
                this.btnDec.add(this.btnInc).off("jcf-pointerdown", this.onButtonPress), this.handle.off("jcf-pointerdown", this.onHandlePress), this.doc.off("jcf-pointermove", this.onHandleDrag), this.doc.off("jcf-pointerup", this.onHandleRelease), this.doc.off("jcf-pointerup", this.onButtonRelease), this.stopSmoothScrolling(), this.stopPageScrolling(), this.scrollbar.remove()
            }
        }), s
    })
}(jcf);

/**
 * jQuery simplebox v1.1.1
 * Copyright (c) 2016 JetCoders
 * email: yuriy.shpak@jetcoders.com
 * www: JetCoders.com
 * Licensed under the MIT License:
 * http://www.opensource.org/licenses/mit-license.php
 **/

;(function ($) {
    var _condition = function (id, options) {

        if ($.simplebox.modal) {
            var data = $.simplebox.modal.data("simplebox");
            data.onClose($.simplebox.modal);
            $.simplebox.modal.fadeOut(data.duration, function () {
                $.simplebox.modal.css({left: "-9999px", top: "-9999px"}).show();
                data.afterClose($.simplebox.modal);
                $.simplebox.modal.removeData("simplebox");
                $.simplebox.modal = false;
                _toPrepare(id, options)
            })
        } else _toPrepare(id, options)
    }, _calcWinWidth = function () {
        return $(document).width() > $("body").width() ? $(document).width() :
            jQuery("body").width()
    }, _toPrepare = function (id, options) {
        $.simplebox.modal = $(id);
        $.simplebox.modal.data("simplebox", options);
        var data = $.simplebox.modal.data("simplebox");
        data.btnClose = $.simplebox.modal.find(data.linkClose);
        var popupTop = $(window).scrollTop() + $(window).height() / 2 - $.simplebox.modal.outerHeight(true) / 2;
        if ($(window).scrollTop() > popupTop) popupTop = $(window).scrollTop();
        if (popupTop + $.simplebox.modal.outerHeight(true) > $(document).height()) popupTop = $(document).height() - $.simplebox.modal.outerHeight(true);
        if (popupTop < 0) popupTop = 0;
        if (!data.positionFrom) $.simplebox.modal.css({
            zIndex: 1E3,
            top: data.fixed ? 0 : popupTop,
            left: data.fixed ? 0 : _calcWinWidth() / 2 - $.simplebox.modal.outerWidth(true) / 2
        }).hide(); else $.simplebox.modal.css({
            zIndex: 1E3,
            top: $(data.positionFrom).offset().top + $(data.positionFrom).outerHeight(true),
            left: $(data.positionFrom).offset().left
        }).hide();
        _initAnimate(data);
        _closeEvent(data, data.btnClose);
        if (data.overlay.closeClick) _closeEvent(data, $.simplebox.overlay)
    }, _initAnimate = function (data) {
        data.onOpen($.simplebox.modal);
        if (data.overlay) $.simplebox.overlay.html(data.overlay.content).css({
            background: data.overlay.color,
            opacity: data.overlay.opacity
        }).fadeIn(data.duration, function () {
            $.simplebox.modal.fadeIn(data.duration, function () {
                $.simplebox.busy = false;
                data.afterOpen($.simplebox.modal);
                if ($(window).scrollTop() > $.simplebox.modal.offset().top && !data.fixed) $("html, body").animate({scrollTop: $.simplebox.modal.offset().top}, 500)
            })
        }); else {
            $.simplebox.overlay.fadeOut(data.duration);
            $.simplebox.modal.fadeIn(data.duration, function () {
                $.simplebox.busy =
                    false;
                data.afterOpen($.simplebox.modal);
                if ($(window).scrollTop() > $.simplebox.modal.offset().top) $("html, body").animate({scrollTop: $.simplebox.modal.offset().top}, 500)
            })
        }
    }, _closeEvent = function (data, element) {
        element.unbind("click.simplebox").bind("click.simplebox", function () {
            $('.photo-list').on('click','#img_slide',function(){
                $.simplebox.busy = true;
            });

            $( ".photo-list > li").each( function( index, element) {
                // console.log($(element).attr( "id"));
                $( ".photo-list > li.post.type-post").each( function( index, item) {

                    if (!$.simplebox.busy && $(element).attr( "id") == $(item).attr( "id")) {
                        // console.log($.simplebox.busy);
                        $.simplebox.busy = true;
                        data.onClose($.simplebox.modal);
                        $.simplebox.modal.fadeOut(data.duration, function () {
                            $.simplebox.modal.css({left: "-9999px", top: "-9999px"}).show();
                            $.simplebox.overlay.fadeOut(data.duration,
                                function () {
                                    data.afterClose($.simplebox.modal);
                                    $.simplebox.modal.removeData("simplebox");
                                    $.simplebox.modal = false;
                                    $.simplebox.busy = false
                                })
                        })
                    }
                });
            });
            $('.simplebox-overlay').on('click',function(){
                setTimeout(() => $.simplebox.busy = false, 500);
            });
            return false
        })
    }, _error = function (text) {
        if (typeof console == "object") console.warn(text)
    }, methods = {
        init: function (options) {
            $(this).unbind("click.simplebox").bind("click.simplebox", function () {
                var data = $(this).data("simplebox");
                var id = $(this).attr("href") ? $(this).attr("href") : $(this).data("href");
                if ($(id).length == 0) {
                    _error('ID "' + id + '" does not exist on document');
                    return false
                }
                if (!$(this).hasClass(defaults.disableClass) &&
                    !$.simplebox.busy) {
                    $.simplebox.busy = true;
                    _condition(id, jQuery.extend(true, {}, defaults, options))
                }
                return false
            });
            return this
        }, option: function (name, set) {
            if (set) return this.each(function () {
                var data = $(this).data("simplebox");
                if (data) data[name] = set
            }); else {
                var ar = [];
                this.each(function () {
                    var data = $(this).data("simplebox");
                    if (data) ar.push(data[name])
                });
                if (ar.length > 1) return ar; else return ar[0]
            }
        }
    }, defaults = {
        duration: 300, linkClose: ".close, .btn-close", disableClass: "disabled", overlay: {
            box: "simplebox-overlay",
            color: "black", closeClick: true, opacity: .3, content: ""
        }, positionFrom: false, fixed: false, onOpen: function () {
        }, afterOpen: function () {
        }, onClose: function () {
        }, afterClose: function () {
        }
    };
    $.fn.simplebox = function (method) {
        if (methods[method]) return methods[method].apply(this, Array.prototype.slice.call(arguments, 1)); else if (typeof method === "object" || !method) return methods.init.apply(this, arguments); else _error("Method " + method + " does not exist on jQuery.simplebox")
    };
    $.simplebox = function (id, options) {
        if (!$.simplebox.busy) {
            $.simplebox.busy =
                true;
            _condition(id, jQuery.extend(true, {}, defaults, options))
        }
    };
    $.simplebox.init = function () {
        if (!$.simplebox.overlay) {
            $.simplebox.overlay = jQuery('<div class="' + defaults.overlay.box + '"></div>');
            jQuery("body").append($.simplebox.overlay);
            $.simplebox.overlay.css({
                position: "fixed",
                zIndex: 999,
                left: 0,
                top: 0,
                width: "100%",
                height: "100%",
                background: defaults.overlay.color,
                opacity: defaults.overlay.opacity
            }).hide()
        }
        $(document).unbind("keypress.simplebox").bind("keypress.simplebox", function (e) {
            if ($.simplebox.modal &&
                $.simplebox.modal.is(":visible") && e.keyCode == 27) $.simplebox.close()
        });
        $(window).bind("resize.simplebox", function () {
            if ($.simplebox.modal && $.simplebox.modal.is(":visible")) {
                var data = $.simplebox.modal.data("simplebox");
                if (!data.positionFrom) $.simplebox.modal.animate({left: _calcWinWidth() / 2 - $.simplebox.modal.outerWidth(true) / 2}, {
                    queue: false,
                    duration: $.simplebox.modal.data("simplebox").duration
                }); else $.simplebox.modal.animate({
                    top: $(data.positionFrom).offset().top + $(data.positionFrom).outerHeight(true),
                    left: $(data.positionFrom).offset().left
                }, {queue: false, duration: $.simplebox.modal.data("simplebox").duration})
            }
        })
    };
    $.simplebox.close = function () {
        if ($.simplebox.modal && !$.simplebox.busy) {
            var data = $.simplebox.modal.data("simplebox");
            $.simplebox.busy = true;
            data.onClose($.simplebox.modal);
            $.simplebox.modal.fadeOut(data.duration, function () {
                $.simplebox.modal.css({left: "-9999px", top: "-9999px"}).show();
                if ($.simplebox.overlay) $.simplebox.overlay.fadeOut(data.duration, function () {
                    data.afterClose($.simplebox.modal);
                    $.simplebox.modal.removeData("simplebox");
                    $.simplebox.modal = false;
                    $.simplebox.busy = false
                }); else {
                    data.afterClose($.simplebox.modal);
                    $.simplebox.modal.removeData("simplebox");
                    $.simplebox.modal = false;
                    $.simplebox.busy = false
                }
            })
        }
    };
    $(document).ready(function () {
        $.simplebox.init()
    })
})(jQuery);

/**
 * Slick slide
 **/

!function (i) {
    "use strict";
    "function" == typeof define && define.amd ? define(["jquery"], i) : "undefined" != typeof exports ? module.exports = i(require("jquery")) : i(jQuery)
}(function (i) {
    "use strict";
    var e = window.Slick || {};
    var pages = $('.number-photo');
    var slider = $('.fade-slider');
        slider.on('init reInit afterChange', function (event, slick, currentSlide, nextSlide) {
            var i = (currentSlide ? currentSlide : 0) + 1;
            pages.text('Фото ' + i + ' из ' + slick.slideCount);
        });
    (e = function () {
        var e = 0;
        return function (t, o) {
            var s, n = this;
            n.defaults = {
                accessibility: !0,
                adaptiveHeight: !1,
                appendArrows: i(t),
                appendDots: i(t),
                arrows: !0,
                asNavFor: null,
                prevArrow: '<button class="slick-prev" aria-label="Previous" type="button">Previous</button>',
                nextArrow: '<button class="slick-next" aria-label="Next" type="button">Next</button>',
                autoplay: !1,
                autoplaySpeed: 3e3,
                centerMode: !1,
                centerPadding: "50px",
                cssEase: "ease",
                customPaging: function (e, t) {
                    return i('<button type="button" />').text(t + 1)
                },
                dots: !1,
                dotsClass: "slick-dots",
                draggable: !0,
                easing: "linear",
                edgeFriction: .35,
                fade: !1,
                focusOnSelect: !1,
                focusOnChange: !1,
                infinite: !0,
                initialSlide: 0,
                lazyLoad: "ondemand",
                mobileFirst: !1,
                pauseOnHover: !0,
                pauseOnFocus: !0,
                pauseOnDotsHover: !1,
                respondTo: "window",
                responsive: null,
                rows: 1,
                rtl: !1,
                slide: "",
                slidesPerRow: 1,
                slidesToShow: 1,
                slidesToScroll: 1,
                speed: 500,
                swipe: !0,
                swipeToSlide: !1,
                touchMove: !0,
                touchThreshold: 5,
                useCSS: !0,
                useTransform: !0,
                variableWidth: !1,
                vertical: !1,
                verticalSwiping: !1,
                waitForAnimate: !0,
                zIndex: 1e3
            }, n.initials = {
                animating: !1,
                dragging: !1,
                autoPlayTimer: null,
                currentDirection: 0,
                currentLeft: null,
                currentSlide: 0,
                direction: 1,
                $dots: null,
                listWidth: null,
                listHeight: null,
                loadIndex: 0,
                $nextArrow: null,
                $prevArrow: null,
                scrolling: !1,
                slideCount: null,
                slideWidth: null,
                $slideTrack: null,
                $slides: null,
                sliding: !1,
                slideOffset: 0,
                swipeLeft: null,
                swiping: !1,
                $list: null,
                touchObject: {},
                transformsEnabled: !1,
                unslicked: !1
            }, i.extend(n, n.initials), n.activeBreakpoint = null, n.animType = null, n.animProp = null, n.breakpoints = [], n.breakpointSettings = [], n.cssTransitions = !1, n.focussed = !1, n.interrupted = !1, n.hidden = "hidden", n.paused = !0, n.positionProp = null, n.respondTo = null, n.rowCount = 1, n.shouldClick = !0, n.$slider = i(t), n.$slidesCache = null, n.transformType = null, n.transitionType = null, n.visibilityChange = "visibilitychange", n.windowWidth = 0, n.windowTimer = null, s = i(t).data("slick") || {}, n.options = i.extend({}, n.defaults, o, s), n.currentSlide = n.options.initialSlide, n.originalSettings = n.options, void 0 !== document.mozHidden ? (n.hidden = "mozHidden", n.visibilityChange = "mozvisibilitychange") : void 0 !== document.webkitHidden && (n.hidden = "webkitHidden", n.visibilityChange = "webkitvisibilitychange"), n.autoPlay = i.proxy(n.autoPlay, n), n.autoPlayClear = i.proxy(n.autoPlayClear, n), n.autoPlayIterator = i.proxy(n.autoPlayIterator, n), n.changeSlide = i.proxy(n.changeSlide, n), n.clickHandler = i.proxy(n.clickHandler, n), n.selectHandler = i.proxy(n.selectHandler, n), n.setPosition = i.proxy(n.setPosition, n), n.swipeHandler = i.proxy(n.swipeHandler, n), n.dragHandler = i.proxy(n.dragHandler, n), n.keyHandler = i.proxy(n.keyHandler, n), n.instanceUid = e++, n.htmlExpr = /^(?:\s*(<[\w\W]+>)[^>]*)$/, n.registerBreakpoints(), n.init(!0)
        }
    }()).prototype.activateADA = function () {
        this.$slideTrack.find(".slick-active").attr({"aria-hidden": "false"}).find("a, input, button, select").attr({tabindex: "0"})
    }, e.prototype.addSlide = e.prototype.slickAdd = function (e, t, o) {
        var s = this;
        if ("boolean" == typeof t) o = t, t = null; else if (t < 0 || t >= s.slideCount) return !1;
        s.unload(), "number" == typeof t ? 0 === t && 0 === s.$slides.length ? i(e).appendTo(s.$slideTrack) : o ? i(e).insertBefore(s.$slides.eq(t)) : i(e).insertAfter(s.$slides.eq(t)) : !0 === o ? i(e).prependTo(s.$slideTrack) : i(e).appendTo(s.$slideTrack), s.$slides = s.$slideTrack.children(this.options.slide), s.$slideTrack.children(this.options.slide).detach(), s.$slideTrack.append(s.$slides), s.$slides.each(function (e, t) {
            i(t).attr("data-slick-index", e)
        }), s.$slidesCache = s.$slides, s.reinit()
    }, e.prototype.animateHeight = function () {
        var i = this;
        if (1 === i.options.slidesToShow && !0 === i.options.adaptiveHeight && !1 === i.options.vertical) {
            var e = i.$slides.eq(i.currentSlide).outerHeight(!0);
            i.$list.animate({height: e}, i.options.speed)
        }
    }, e.prototype.animateSlide = function (e, t) {
        var o = {}, s = this;
        s.animateHeight(), !0 === s.options.rtl && !1 === s.options.vertical && (e = -e), !1 === s.transformsEnabled ? !1 === s.options.vertical ? s.$slideTrack.animate({left: e}, s.options.speed, s.options.easing, t) : s.$slideTrack.animate({top: e}, s.options.speed, s.options.easing, t) : !1 === s.cssTransitions ? (!0 === s.options.rtl && (s.currentLeft = -s.currentLeft), i({animStart: s.currentLeft}).animate({animStart: e}, {
            duration: s.options.speed,
            easing: s.options.easing,
            step: function (i) {
                i = Math.ceil(i), !1 === s.options.vertical ? (o[s.animType] = "translate(" + i + "px, 0px)", s.$slideTrack.css(o)) : (o[s.animType] = "translate(0px," + i + "px)", s.$slideTrack.css(o))
            },
            complete: function () {
                t && t.call()
            }
        })) : (s.applyTransition(), e = Math.ceil(e), !1 === s.options.vertical ? o[s.animType] = "translate3d(" + e + "px, 0px, 0px)" : o[s.animType] = "translate3d(0px," + e + "px, 0px)", s.$slideTrack.css(o), t && setTimeout(function () {
            s.disableTransition(), t.call()
        }, s.options.speed))
    }, e.prototype.getNavTarget = function () {
        var e = this, t = e.options.asNavFor;
        return t && null !== t && (t = i(t).not(e.$slider)), t
    }, e.prototype.asNavFor = function (e) {
        var t = this.getNavTarget();
        null !== t && "object" == typeof t && t.each(function () {
            var t = i(this).slick("getSlick");
            t.unslicked || t.slideHandler(e, !0)
        })
    }, e.prototype.applyTransition = function (i) {
        var e = this, t = {};
        !1 === e.options.fade ? t[e.transitionType] = e.transformType + " " + e.options.speed + "ms " + e.options.cssEase : t[e.transitionType] = "opacity " + e.options.speed + "ms " + e.options.cssEase, !1 === e.options.fade ? e.$slideTrack.css(t) : e.$slides.eq(i).css(t)
    }, e.prototype.autoPlay = function () {
        var i = this;
        i.autoPlayClear(), i.slideCount > i.options.slidesToShow && (i.autoPlayTimer = setInterval(i.autoPlayIterator, i.options.autoplaySpeed))
    }, e.prototype.autoPlayClear = function () {
        var i = this;
        i.autoPlayTimer && clearInterval(i.autoPlayTimer)
    }, e.prototype.autoPlayIterator = function () {
        var i = this, e = i.currentSlide + i.options.slidesToScroll;
        i.paused || i.interrupted || i.focussed || (!1 === i.options.infinite && (1 === i.direction && i.currentSlide + 1 === i.slideCount - 1 ? i.direction = 0 : 0 === i.direction && (e = i.currentSlide - i.options.slidesToScroll, i.currentSlide - 1 == 0 && (i.direction = 1))), i.slideHandler(e))
    }, e.prototype.buildArrows = function () {
        var e = this;
        !0 === e.options.arrows && (e.$prevArrow = i(e.options.prevArrow).addClass("slick-arrow"), e.$nextArrow = i(e.options.nextArrow).addClass("slick-arrow"), e.slideCount > e.options.slidesToShow ? (e.$prevArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"), e.$nextArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"), e.htmlExpr.test(e.options.prevArrow) && e.$prevArrow.prependTo(e.options.appendArrows), e.htmlExpr.test(e.options.nextArrow) && e.$nextArrow.appendTo(e.options.appendArrows), !0 !== e.options.infinite && e.$prevArrow.addClass("slick-disabled").attr("aria-disabled", "true")) : e.$prevArrow.add(e.$nextArrow).addClass("slick-hidden").attr({
            "aria-disabled": "true",
            tabindex: "-1"
        }))
    }, e.prototype.buildDots = function () {
        var e, t, o = this;
        if (!0 === o.options.dots) {
            for (o.$slider.addClass("slick-dotted"), t = i("<ul />").addClass(o.options.dotsClass), e = 0; e <= o.getDotCount(); e += 1) t.append(i("<li />").append(o.options.customPaging.call(this, o, e)));
            o.$dots = t.appendTo(o.options.appendDots), o.$dots.find("li").first().addClass("slick-active")
        }
    }, e.prototype.buildOut = function () {
        var e = this;
        e.$slides = e.$slider.children(e.options.slide + ":not(.slick-cloned)").addClass("slick-slide"), e.slideCount = e.$slides.length, e.$slides.each(function (e, t) {
            i(t).attr("data-slick-index", e).data("originalStyling", i(t).attr("style") || "")
        }), e.$slider.addClass("slick-slider"), e.$slideTrack = 0 === e.slideCount ? i('<div class="slick-track"/>').appendTo(e.$slider) : e.$slides.wrapAll('<div class="slick-track"/>').parent(), e.$list = e.$slideTrack.wrap('<div class="slick-list"/>').parent(), e.$slideTrack.css("opacity", 0), !0 !== e.options.centerMode && !0 !== e.options.swipeToSlide || (e.options.slidesToScroll = 1), i("img[data-lazy]", e.$slider).not("[src]").addClass("slick-loading"), e.setupInfinite(), e.buildArrows(), e.buildDots(), e.updateDots(), e.setSlideClasses("number" == typeof e.currentSlide ? e.currentSlide : 0), !0 === e.options.draggable && e.$list.addClass("draggable")
    }, e.prototype.buildRows = function () {
        var i, e, t, o, s, n, r, l = this;
        if (o = document.createDocumentFragment(), n = l.$slider.children(), l.options.rows > 1) {
            for (r = l.options.slidesPerRow * l.options.rows, s = Math.ceil(n.length / r), i = 0; i < s; i++) {
                var d = document.createElement("div");
                for (e = 0; e < l.options.rows; e++) {
                    var a = document.createElement("div");
                    for (t = 0; t < l.options.slidesPerRow; t++) {
                        var c = i * r + (e * l.options.slidesPerRow + t);
                        n.get(c) && a.appendChild(n.get(c))
                    }
                    d.appendChild(a)
                }
                o.appendChild(d)
            }
            l.$slider.empty().append(o), l.$slider.children().children().children().css({
                width: 100 / l.options.slidesPerRow + "%",
                display: "inline-block"
            })
        }
    }, e.prototype.checkResponsive = function (e, t) {
        var o, s, n, r = this, l = !1, d = r.$slider.width(), a = window.innerWidth || i(window).width();
        if ("window" === r.respondTo ? n = a : "slider" === r.respondTo ? n = d : "min" === r.respondTo && (n = Math.min(a, d)), r.options.responsive && r.options.responsive.length && null !== r.options.responsive) {
            s = null;
            for (o in r.breakpoints) r.breakpoints.hasOwnProperty(o) && (!1 === r.originalSettings.mobileFirst ? n < r.breakpoints[o] && (s = r.breakpoints[o]) : n > r.breakpoints[o] && (s = r.breakpoints[o]));
            null !== s ? null !== r.activeBreakpoint ? (s !== r.activeBreakpoint || t) && (r.activeBreakpoint = s, "unslick" === r.breakpointSettings[s] ? r.unslick(s) : (r.options = i.extend({}, r.originalSettings, r.breakpointSettings[s]), !0 === e && (r.currentSlide = r.options.initialSlide), r.refresh(e)), l = s) : (r.activeBreakpoint = s, "unslick" === r.breakpointSettings[s] ? r.unslick(s) : (r.options = i.extend({}, r.originalSettings, r.breakpointSettings[s]), !0 === e && (r.currentSlide = r.options.initialSlide), r.refresh(e)), l = s) : null !== r.activeBreakpoint && (r.activeBreakpoint = null, r.options = r.originalSettings, !0 === e && (r.currentSlide = r.options.initialSlide), r.refresh(e), l = s), e || !1 === l || r.$slider.trigger("breakpoint", [r, l])
        }
    }, e.prototype.changeSlide = function (e, t) {
        var o, s, n, r = this, l = i(e.currentTarget);
        switch (l.is("a") && e.preventDefault(), l.is("li") || (l = l.closest("li")), n = r.slideCount % r.options.slidesToScroll != 0, o = n ? 0 : (r.slideCount - r.currentSlide) % r.options.slidesToScroll, e.data.message) {
            case"previous":
                s = 0 === o ? r.options.slidesToScroll : r.options.slidesToShow - o, r.slideCount > r.options.slidesToShow && r.slideHandler(r.currentSlide - s, !1, t);
                break;
            case"next":
                s = 0 === o ? r.options.slidesToScroll : o, r.slideCount > r.options.slidesToShow && r.slideHandler(r.currentSlide + s, !1, t);
                break;
            case"index":
                var d = 0 === e.data.index ? 0 : e.data.index || l.index() * r.options.slidesToScroll;
                r.slideHandler(r.checkNavigable(d), !1, t), l.children().trigger("focus");
                break;
            default:
                return
        }
    }, e.prototype.checkNavigable = function (i) {
        var e, t;
        if (e = this.getNavigableIndexes(), t = 0, i > e[e.length - 1]) i = e[e.length - 1]; else for (var o in e) {
            if (i < e[o]) {
                i = t;
                break
            }
            t = e[o]
        }
        return i
    }, e.prototype.cleanUpEvents = function () {
        var e = this;
        e.options.dots && null !== e.$dots && (i("li", e.$dots).off("click.slick", e.changeSlide).off("mouseenter.slick", i.proxy(e.interrupt, e, !0)).off("mouseleave.slick", i.proxy(e.interrupt, e, !1)), !0 === e.options.accessibility && e.$dots.off("keydown.slick", e.keyHandler)), e.$slider.off("focus.slick blur.slick"), !0 === e.options.arrows && e.slideCount > e.options.slidesToShow && (e.$prevArrow && e.$prevArrow.off("click.slick", e.changeSlide), e.$nextArrow && e.$nextArrow.off("click.slick", e.changeSlide), !0 === e.options.accessibility && (e.$prevArrow && e.$prevArrow.off("keydown.slick", e.keyHandler), e.$nextArrow && e.$nextArrow.off("keydown.slick", e.keyHandler))), e.$list.off("touchstart.slick mousedown.slick", e.swipeHandler), e.$list.off("touchmove.slick mousemove.slick", e.swipeHandler), e.$list.off("touchend.slick mouseup.slick", e.swipeHandler), e.$list.off("touchcancel.slick mouseleave.slick", e.swipeHandler), e.$list.off("click.slick", e.clickHandler), i(document).off(e.visibilityChange, e.visibility), e.cleanUpSlideEvents(), !0 === e.options.accessibility && e.$list.off("keydown.slick", e.keyHandler), !0 === e.options.focusOnSelect && i(e.$slideTrack).children().off("click.slick", e.selectHandler), i(window).off("orientationchange.slick.slick-" + e.instanceUid, e.orientationChange), i(window).off("resize.slick.slick-" + e.instanceUid, e.resize), i("[draggable!=true]", e.$slideTrack).off("dragstart", e.preventDefault), i(window).off("load.slick.slick-" + e.instanceUid, e.setPosition)
    }, e.prototype.cleanUpSlideEvents = function () {
        var e = this;
        e.$list.off("mouseenter.slick", i.proxy(e.interrupt, e, !0)), e.$list.off("mouseleave.slick", i.proxy(e.interrupt, e, !1))
    }, e.prototype.cleanUpRows = function () {
        var i, e = this;
        e.options.rows > 1 && ((i = e.$slides.children().children()).removeAttr("style"), e.$slider.empty().append(i))
    }, e.prototype.clickHandler = function (i) {
        !1 === this.shouldClick && (i.stopImmediatePropagation(), i.stopPropagation(), i.preventDefault())
    }, e.prototype.destroy = function (e) {
        var t = this;
        t.autoPlayClear(), t.touchObject = {}, t.cleanUpEvents(), i(".slick-cloned", t.$slider).detach(), t.$dots && t.$dots.remove(), t.$prevArrow && t.$prevArrow.length && (t.$prevArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display", ""), t.htmlExpr.test(t.options.prevArrow) && t.$prevArrow.remove()), t.$nextArrow && t.$nextArrow.length && (t.$nextArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display", ""), t.htmlExpr.test(t.options.nextArrow) && t.$nextArrow.remove()), t.$slides && (t.$slides.removeClass("slick-slide slick-active slick-center slick-visible slick-current").removeAttr("aria-hidden").removeAttr("data-slick-index").each(function () {
            i(this).attr("style", i(this).data("originalStyling"))
        }), t.$slideTrack.children(this.options.slide).detach(), t.$slideTrack.detach(), t.$list.detach(), t.$slider.append(t.$slides)), t.cleanUpRows(), t.$slider.removeClass("slick-slider"), t.$slider.removeClass("slick-initialized"), t.$slider.removeClass("slick-dotted"), t.unslicked = !0, e || t.$slider.trigger("destroy", [t])
    }, e.prototype.disableTransition = function (i) {
        var e = this, t = {};
        t[e.transitionType] = "", !1 === e.options.fade ? e.$slideTrack.css(t) : e.$slides.eq(i).css(t)
    }, e.prototype.fadeSlide = function (i, e) {
        var t = this;
        !1 === t.cssTransitions ? (t.$slides.eq(i).css({zIndex: t.options.zIndex}), t.$slides.eq(i).animate({opacity: 1}, t.options.speed, t.options.easing, e)) : (t.applyTransition(i), t.$slides.eq(i).css({
            opacity: 1,
            zIndex: t.options.zIndex
        }), e && setTimeout(function () {
            t.disableTransition(i), e.call()
        }, t.options.speed))
    }, e.prototype.fadeSlideOut = function (i) {
        var e = this;
        !1 === e.cssTransitions ? e.$slides.eq(i).animate({
            opacity: 0,
            zIndex: e.options.zIndex - 2
        }, e.options.speed, e.options.easing) : (e.applyTransition(i), e.$slides.eq(i).css({
            opacity: 0,
            zIndex: e.options.zIndex - 2
        }))
    }, e.prototype.filterSlides = e.prototype.slickFilter = function (i) {
        var e = this;
        null !== i && (e.$slidesCache = e.$slides, e.unload(), e.$slideTrack.children(this.options.slide).detach(), e.$slidesCache.filter(i).appendTo(e.$slideTrack), e.reinit())
    }, e.prototype.focusHandler = function () {
        var e = this;
        e.$slider.off("focus.slick blur.slick").on("focus.slick blur.slick", "*", function (t) {
            t.stopImmediatePropagation();
            var o = i(this);
            setTimeout(function () {
                e.options.pauseOnFocus && (e.focussed = o.is(":focus"), e.autoPlay())
            }, 0)
        })
    }, e.prototype.getCurrent = e.prototype.slickCurrentSlide = function () {
        return this.currentSlide
    }, e.prototype.getDotCount = function () {
        var i = this, e = 0, t = 0, o = 0;
        if (!0 === i.options.infinite) if (i.slideCount <= i.options.slidesToShow) ++o; else for (; e < i.slideCount;) ++o, e = t + i.options.slidesToScroll, t += i.options.slidesToScroll <= i.options.slidesToShow ? i.options.slidesToScroll : i.options.slidesToShow; else if (!0 === i.options.centerMode) o = i.slideCount; else if (i.options.asNavFor) for (; e < i.slideCount;) ++o, e = t + i.options.slidesToScroll, t += i.options.slidesToScroll <= i.options.slidesToShow ? i.options.slidesToScroll : i.options.slidesToShow; else o = 1 + Math.ceil((i.slideCount - i.options.slidesToShow) / i.options.slidesToScroll);
        return o - 1
    }, e.prototype.getLeft = function (i) {
        var e, t, o, s, n = this, r = 0;
        return n.slideOffset = 0, t = n.$slides.first().outerHeight(!0), !0 === n.options.infinite ? (n.slideCount > n.options.slidesToShow && (n.slideOffset = n.slideWidth * n.options.slidesToShow * -1, s = -1, !0 === n.options.vertical && !0 === n.options.centerMode && (2 === n.options.slidesToShow ? s = -1.5 : 1 === n.options.slidesToShow && (s = -2)), r = t * n.options.slidesToShow * s), n.slideCount % n.options.slidesToScroll != 0 && i + n.options.slidesToScroll > n.slideCount && n.slideCount > n.options.slidesToShow && (i > n.slideCount ? (n.slideOffset = (n.options.slidesToShow - (i - n.slideCount)) * n.slideWidth * -1, r = (n.options.slidesToShow - (i - n.slideCount)) * t * -1) : (n.slideOffset = n.slideCount % n.options.slidesToScroll * n.slideWidth * -1, r = n.slideCount % n.options.slidesToScroll * t * -1))) : i + n.options.slidesToShow > n.slideCount && (n.slideOffset = (i + n.options.slidesToShow - n.slideCount) * n.slideWidth, r = (i + n.options.slidesToShow - n.slideCount) * t), n.slideCount <= n.options.slidesToShow && (n.slideOffset = 0, r = 0), !0 === n.options.centerMode && n.slideCount <= n.options.slidesToShow ? n.slideOffset = n.slideWidth * Math.floor(n.options.slidesToShow) / 2 - n.slideWidth * n.slideCount / 2 : !0 === n.options.centerMode && !0 === n.options.infinite ? n.slideOffset += n.slideWidth * Math.floor(n.options.slidesToShow / 2) - n.slideWidth : !0 === n.options.centerMode && (n.slideOffset = 0, n.slideOffset += n.slideWidth * Math.floor(n.options.slidesToShow / 2)), e = !1 === n.options.vertical ? i * n.slideWidth * -1 + n.slideOffset : i * t * -1 + r, !0 === n.options.variableWidth && (o = n.slideCount <= n.options.slidesToShow || !1 === n.options.infinite ? n.$slideTrack.children(".slick-slide").eq(i) : n.$slideTrack.children(".slick-slide").eq(i + n.options.slidesToShow), e = !0 === n.options.rtl ? o[0] ? -1 * (n.$slideTrack.width() - o[0].offsetLeft - o.width()) : 0 : o[0] ? -1 * o[0].offsetLeft : 0, !0 === n.options.centerMode && (o = n.slideCount <= n.options.slidesToShow || !1 === n.options.infinite ? n.$slideTrack.children(".slick-slide").eq(i) : n.$slideTrack.children(".slick-slide").eq(i + n.options.slidesToShow + 1), e = !0 === n.options.rtl ? o[0] ? -1 * (n.$slideTrack.width() - o[0].offsetLeft - o.width()) : 0 : o[0] ? -1 * o[0].offsetLeft : 0, e += (n.$list.width() - o.outerWidth()) / 2)), e
    }, e.prototype.getOption = e.prototype.slickGetOption = function (i) {
        return this.options[i]
    }, e.prototype.getNavigableIndexes = function () {
        var i, e = this, t = 0, o = 0, s = [];
        for (!1 === e.options.infinite ? i = e.slideCount : (t = -1 * e.options.slidesToScroll, o = -1 * e.options.slidesToScroll, i = 2 * e.slideCount); t < i;) s.push(t), t = o + e.options.slidesToScroll, o += e.options.slidesToScroll <= e.options.slidesToShow ? e.options.slidesToScroll : e.options.slidesToShow;
        return s
    }, e.prototype.getSlick = function () {
        return this
    }, e.prototype.getSlideCount = function () {
        var e, t, o = this;
        return t = !0 === o.options.centerMode ? o.slideWidth * Math.floor(o.options.slidesToShow / 2) : 0, !0 === o.options.swipeToSlide ? (o.$slideTrack.find(".slick-slide").each(function (s, n) {
            if (n.offsetLeft - t + i(n).outerWidth() / 2 > -1 * o.swipeLeft) return e = n, !1
        }), Math.abs(i(e).attr("data-slick-index") - o.currentSlide) || 1) : o.options.slidesToScroll
    }, e.prototype.goTo = e.prototype.slickGoTo = function (i, e) {
        this.changeSlide({data: {message: "index", index: parseInt(i)}}, e)
    }, e.prototype.init = function (e) {
        var t = this;
        i(t.$slider).hasClass("slick-initialized") || (i(t.$slider).addClass("slick-initialized"), t.buildRows(), t.buildOut(), t.setProps(), t.startLoad(), t.loadSlider(), t.initializeEvents(), t.updateArrows(), t.updateDots(), t.checkResponsive(!0), t.focusHandler()), e && t.$slider.trigger("init", [t]), !0 === t.options.accessibility && t.initADA(), t.options.autoplay && (t.paused = !1, t.autoPlay())
    }, e.prototype.initADA = function () {
        var e = this, t = Math.ceil(e.slideCount / e.options.slidesToShow),
            o = e.getNavigableIndexes().filter(function (i) {
                return i >= 0 && i < e.slideCount
            });
        e.$slides.add(e.$slideTrack.find(".slick-cloned")).attr({
            "aria-hidden": "true",
            tabindex: "-1"
        }).find("a, input, button, select").attr({tabindex: "-1"}), null !== e.$dots && (e.$slides.not(e.$slideTrack.find(".slick-cloned")).each(function (t) {
            var s = o.indexOf(t);
            i(this).attr({
                role: "tabpanel",
                id: "slick-slide" + e.instanceUid + t,
                tabindex: -1
            }), -1 !== s && i(this).attr({"aria-describedby": "slick-slide-control" + e.instanceUid + s})
        }), e.$dots.attr("role", "tablist").find("li").each(function (s) {
            var n = o[s];
            i(this).attr({role: "presentation"}), i(this).find("button").first().attr({
                role: "tab",
                id: "slick-slide-control" + e.instanceUid + s,
                "aria-controls": "slick-slide" + e.instanceUid + n,
                "aria-label": s + 1 + " of " + t,
                "aria-selected": null,
                tabindex: "-1"
            })
        }).eq(e.currentSlide).find("button").attr({"aria-selected": "true", tabindex: "0"}).end());
        for (var s = e.currentSlide, n = s + e.options.slidesToShow; s < n; s++) e.$slides.eq(s).attr("tabindex", 0);
        e.activateADA()
    }, e.prototype.initArrowEvents = function () {
        var i = this;
        !0 === i.options.arrows && i.slideCount > i.options.slidesToShow && (i.$prevArrow.off("click.slick").on("click.slick", {message: "previous"}, i.changeSlide), i.$nextArrow.off("click.slick").on("click.slick", {message: "next"}, i.changeSlide), !0 === i.options.accessibility && (i.$prevArrow.on("keydown.slick", i.keyHandler), i.$nextArrow.on("keydown.slick", i.keyHandler)))
    }, e.prototype.initDotEvents = function () {
        var e = this;
        !0 === e.options.dots && (i("li", e.$dots).on("click.slick", {message: "index"}, e.changeSlide), !0 === e.options.accessibility && e.$dots.on("keydown.slick", e.keyHandler)), !0 === e.options.dots && !0 === e.options.pauseOnDotsHover && i("li", e.$dots).on("mouseenter.slick", i.proxy(e.interrupt, e, !0)).on("mouseleave.slick", i.proxy(e.interrupt, e, !1))
    }, e.prototype.initSlideEvents = function () {
        var e = this;
        e.options.pauseOnHover && (e.$list.on("mouseenter.slick", i.proxy(e.interrupt, e, !0)), e.$list.on("mouseleave.slick", i.proxy(e.interrupt, e, !1)))
    }, e.prototype.initializeEvents = function () {
        var e = this;
        e.initArrowEvents(), e.initDotEvents(), e.initSlideEvents(), e.$list.on("touchstart.slick mousedown.slick", {action: "start"}, e.swipeHandler), e.$list.on("touchmove.slick mousemove.slick", {action: "move"}, e.swipeHandler), e.$list.on("touchend.slick mouseup.slick", {action: "end"}, e.swipeHandler), e.$list.on("touchcancel.slick mouseleave.slick", {action: "end"}, e.swipeHandler), e.$list.on("click.slick", e.clickHandler), i(document).on(e.visibilityChange, i.proxy(e.visibility, e)), !0 === e.options.accessibility && e.$list.on("keydown.slick", e.keyHandler), !0 === e.options.focusOnSelect && i(e.$slideTrack).children().on("click.slick", e.selectHandler), i(window).on("orientationchange.slick.slick-" + e.instanceUid, i.proxy(e.orientationChange, e)), i(window).on("resize.slick.slick-" + e.instanceUid, i.proxy(e.resize, e)), i("[draggable!=true]", e.$slideTrack).on("dragstart", e.preventDefault), i(window).on("load.slick.slick-" + e.instanceUid, e.setPosition), i(e.setPosition)
    }, e.prototype.initUI = function () {
        var i = this;
        !0 === i.options.arrows && i.slideCount > i.options.slidesToShow && (i.$prevArrow.show(), i.$nextArrow.show()), !0 === i.options.dots && i.slideCount > i.options.slidesToShow && i.$dots.show()
    }, e.prototype.keyHandler = function (i) {
        var e = this;
        i.target.tagName.match("TEXTAREA|INPUT|SELECT") || (37 === i.keyCode && !0 === e.options.accessibility ? e.changeSlide({data: {message: !0 === e.options.rtl ? "next" : "previous"}}) : 39 === i.keyCode && !0 === e.options.accessibility && e.changeSlide({data: {message: !0 === e.options.rtl ? "previous" : "next"}}))
    }, e.prototype.lazyLoad = function () {
        function e(e) {
            i("img[data-lazy]", e).each(function () {
                var e = i(this), t = i(this).attr("data-lazy"), o = i(this).attr("data-srcset"),
                    s = i(this).attr("data-sizes") || n.$slider.attr("data-sizes"), r = document.createElement("img");
                r.onload = function () {
                    e.animate({opacity: 0}, 100, function () {
                        o && (e.attr("srcset", o), s && e.attr("sizes", s)), e.attr("src", t).animate({opacity: 1}, 200, function () {
                            e.removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading")
                        }), n.$slider.trigger("lazyLoaded", [n, e, t])
                    })
                }, r.onerror = function () {
                    e.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"), n.$slider.trigger("lazyLoadError", [n, e, t])
                }, r.src = t
            })
        }

        var t, o, s, n = this;
        if (!0 === n.options.centerMode ? !0 === n.options.infinite ? s = (o = n.currentSlide + (n.options.slidesToShow / 2 + 1)) + n.options.slidesToShow + 2 : (o = Math.max(0, n.currentSlide - (n.options.slidesToShow / 2 + 1)), s = n.options.slidesToShow / 2 + 1 + 2 + n.currentSlide) : (o = n.options.infinite ? n.options.slidesToShow + n.currentSlide : n.currentSlide, s = Math.ceil(o + n.options.slidesToShow), !0 === n.options.fade && (o > 0 && o--, s <= n.slideCount && s++)), t = n.$slider.find(".slick-slide").slice(o, s), "anticipated" === n.options.lazyLoad) for (var r = o - 1, l = s, d = n.$slider.find(".slick-slide"), a = 0; a < n.options.slidesToScroll; a++) r < 0 && (r = n.slideCount - 1), t = (t = t.add(d.eq(r))).add(d.eq(l)), r--, l++;
        e(t), n.slideCount <= n.options.slidesToShow ? e(n.$slider.find(".slick-slide")) : n.currentSlide >= n.slideCount - n.options.slidesToShow ? e(n.$slider.find(".slick-cloned").slice(0, n.options.slidesToShow)) : 0 === n.currentSlide && e(n.$slider.find(".slick-cloned").slice(-1 * n.options.slidesToShow))
    }, e.prototype.loadSlider = function () {
        var i = this;
        i.setPosition(), i.$slideTrack.css({opacity: 1}), i.$slider.removeClass("slick-loading"), i.initUI(), "progressive" === i.options.lazyLoad && i.progressiveLazyLoad()
    }, e.prototype.next = e.prototype.slickNext = function () {
        this.changeSlide({data: {message: "next"}})
    }, e.prototype.orientationChange = function () {
        var i = this;
        i.checkResponsive(), i.setPosition()
    }, e.prototype.pause = e.prototype.slickPause = function () {
        var i = this;
        i.autoPlayClear(), i.paused = !0
    }, e.prototype.play = e.prototype.slickPlay = function () {
        var i = this;
        i.autoPlay(), i.options.autoplay = !0, i.paused = !1, i.focussed = !1, i.interrupted = !1
    }, e.prototype.postSlide = function (e) {
        var t = this;
        t.unslicked || (t.$slider.trigger("afterChange", [t, e]), t.animating = !1, t.slideCount > t.options.slidesToShow && t.setPosition(), t.swipeLeft = null, t.options.autoplay && t.autoPlay(), !0 === t.options.accessibility && (t.initADA(), t.options.focusOnChange && i(t.$slides.get(t.currentSlide)).attr("tabindex", 0).focus()))
    }, e.prototype.prev = e.prototype.slickPrev = function () {
        this.changeSlide({data: {message: "previous"}})
    }, e.prototype.preventDefault = function (i) {
        i.preventDefault()
    }, e.prototype.progressiveLazyLoad = function (e) {
        e = e || 1;
        var t, o, s, n, r, l = this, d = i("img[data-lazy]", l.$slider);
        d.length ? (t = d.first(), o = t.attr("data-lazy"), s = t.attr("data-srcset"), n = t.attr("data-sizes") || l.$slider.attr("data-sizes"), (r = document.createElement("img")).onload = function () {
            s && (t.attr("srcset", s), n && t.attr("sizes", n)), t.attr("src", o).removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading"), !0 === l.options.adaptiveHeight && l.setPosition(), l.$slider.trigger("lazyLoaded", [l, t, o]), l.progressiveLazyLoad()
        }, r.onerror = function () {
            e < 3 ? setTimeout(function () {
                l.progressiveLazyLoad(e + 1)
            }, 500) : (t.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"), l.$slider.trigger("lazyLoadError", [l, t, o]), l.progressiveLazyLoad())
        }, r.src = o) : l.$slider.trigger("allImagesLoaded", [l])
    }, e.prototype.refresh = function (e) {
        var t, o, s = this;
        o = s.slideCount - s.options.slidesToShow, !s.options.infinite && s.currentSlide > o && (s.currentSlide = o), s.slideCount <= s.options.slidesToShow && (s.currentSlide = 0), t = s.currentSlide, s.destroy(!0), i.extend(s, s.initials, {currentSlide: t}), s.init(), e || s.changeSlide({
            data: {
                message: "index",
                index: t
            }
        }, !1)
    }, e.prototype.registerBreakpoints = function () {
        var e, t, o, s = this, n = s.options.responsive || null;
        if ("array" === i.type(n) && n.length) {
            s.respondTo = s.options.respondTo || "window";
            for (e in n) if (o = s.breakpoints.length - 1, n.hasOwnProperty(e)) {
                for (t = n[e].breakpoint; o >= 0;) s.breakpoints[o] && s.breakpoints[o] === t && s.breakpoints.splice(o, 1), o--;
                s.breakpoints.push(t), s.breakpointSettings[t] = n[e].settings
            }
            s.breakpoints.sort(function (i, e) {
                return s.options.mobileFirst ? i - e : e - i
            })
        }
    }, e.prototype.reinit = function () {
        var e = this;
        e.$slides = e.$slideTrack.children(e.options.slide).addClass("slick-slide"), e.slideCount = e.$slides.length, e.currentSlide >= e.slideCount && 0 !== e.currentSlide && (e.currentSlide = e.currentSlide - e.options.slidesToScroll), e.slideCount <= e.options.slidesToShow && (e.currentSlide = 0), e.registerBreakpoints(), e.setProps(), e.setupInfinite(), e.buildArrows(), e.updateArrows(), e.initArrowEvents(), e.buildDots(), e.updateDots(), e.initDotEvents(), e.cleanUpSlideEvents(), e.initSlideEvents(), e.checkResponsive(!1, !0), !0 === e.options.focusOnSelect && i(e.$slideTrack).children().on("click.slick", e.selectHandler), e.setSlideClasses("number" == typeof e.currentSlide ? e.currentSlide : 0), e.setPosition(), e.focusHandler(), e.paused = !e.options.autoplay, e.autoPlay(), e.$slider.trigger("reInit", [e])
    }, e.prototype.resize = function () {
        var e = this;
        i(window).width() !== e.windowWidth && (clearTimeout(e.windowDelay), e.windowDelay = window.setTimeout(function () {
            e.windowWidth = i(window).width(), e.checkResponsive(), e.unslicked || e.setPosition()
        }, 50))
    }, e.prototype.removeSlide = e.prototype.slickRemove = function (i, e, t) {
        var o = this;
        if (i = "boolean" == typeof i ? !0 === (e = i) ? 0 : o.slideCount - 1 : !0 === e ? --i : i, o.slideCount < 1 || i < 0 || i > o.slideCount - 1) return !1;
        o.unload(), !0 === t ? o.$slideTrack.children().remove() : o.$slideTrack.children(this.options.slide).eq(i).remove(), o.$slides = o.$slideTrack.children(this.options.slide), o.$slideTrack.children(this.options.slide).detach(), o.$slideTrack.append(o.$slides), o.$slidesCache = o.$slides, o.reinit()
    }, e.prototype.setCSS = function (i) {
        var e, t, o = this, s = {};
        !0 === o.options.rtl && (i = -i), e = "left" == o.positionProp ? Math.ceil(i) + "px" : "0px", t = "top" == o.positionProp ? Math.ceil(i) + "px" : "0px", s[o.positionProp] = i, !1 === o.transformsEnabled ? o.$slideTrack.css(s) : (s = {}, !1 === o.cssTransitions ? (s[o.animType] = "translate(" + e + ", " + t + ")", o.$slideTrack.css(s)) : (s[o.animType] = "translate3d(" + e + ", " + t + ", 0px)", o.$slideTrack.css(s)))
    }, e.prototype.setDimensions = function () {
        var i = this;
        !1 === i.options.vertical ? !0 === i.options.centerMode && i.$list.css({padding: "0px " + i.options.centerPadding}) : (i.$list.height(i.$slides.first().outerHeight(!0) * i.options.slidesToShow), !0 === i.options.centerMode && i.$list.css({padding: i.options.centerPadding + " 0px"})), i.listWidth = i.$list.width(), i.listHeight = i.$list.height(), !1 === i.options.vertical && !1 === i.options.variableWidth ? (i.slideWidth = Math.ceil(i.listWidth / i.options.slidesToShow), i.$slideTrack.width(Math.ceil(i.slideWidth * i.$slideTrack.children(".slick-slide").length))) : !0 === i.options.variableWidth ? i.$slideTrack.width(5e3 * i.slideCount) : (i.slideWidth = Math.ceil(i.listWidth), i.$slideTrack.height(Math.ceil(i.$slides.first().outerHeight(!0) * i.$slideTrack.children(".slick-slide").length)));
        var e = i.$slides.first().outerWidth(!0) - i.$slides.first().width();
        !1 === i.options.variableWidth && i.$slideTrack.children(".slick-slide").width(i.slideWidth - e)
    }, e.prototype.setFade = function () {
        var e, t = this;
        t.$slides.each(function (o, s) {
            e = t.slideWidth * o * -1, !0 === t.options.rtl ? i(s).css({
                position: "relative",
                right: e,
                top: 0,
                zIndex: t.options.zIndex - 2,
                opacity: 0
            }) : i(s).css({position: "relative", left: e, top: 0, zIndex: t.options.zIndex - 2, opacity: 0})
        }), t.$slides.eq(t.currentSlide).css({zIndex: t.options.zIndex - 1, opacity: 1})
    }, e.prototype.setHeight = function () {
        var i = this;
        if (1 === i.options.slidesToShow && !0 === i.options.adaptiveHeight && !1 === i.options.vertical) {
            var e = i.$slides.eq(i.currentSlide).outerHeight(!0);
            i.$list.css("height", e)
        }
    }, e.prototype.setOption = e.prototype.slickSetOption = function () {
        var e, t, o, s, n, r = this, l = !1;
        if ("object" === i.type(arguments[0]) ? (o = arguments[0], l = arguments[1], n = "multiple") : "string" === i.type(arguments[0]) && (o = arguments[0], s = arguments[1], l = arguments[2], "responsive" === arguments[0] && "array" === i.type(arguments[1]) ? n = "responsive" : void 0 !== arguments[1] && (n = "single")), "single" === n) r.options[o] = s; else if ("multiple" === n) i.each(o, function (i, e) {
            r.options[i] = e
        }); else if ("responsive" === n) for (t in s) if ("array" !== i.type(r.options.responsive)) r.options.responsive = [s[t]]; else {
            for (e = r.options.responsive.length - 1; e >= 0;) r.options.responsive[e].breakpoint === s[t].breakpoint && r.options.responsive.splice(e, 1), e--;
            r.options.responsive.push(s[t])
        }
        l && (r.unload(), r.reinit())
    }, e.prototype.setPosition = function () {
        var i = this;
        i.setDimensions(), i.setHeight(), !1 === i.options.fade ? i.setCSS(i.getLeft(i.currentSlide)) : i.setFade(), i.$slider.trigger("setPosition", [i])
    }, e.prototype.setProps = function () {
        var i = this, e = document.body.style;
        i.positionProp = !0 === i.options.vertical ? "top" : "left", "top" === i.positionProp ? i.$slider.addClass("slick-vertical") : i.$slider.removeClass("slick-vertical"), void 0 === e.WebkitTransition && void 0 === e.MozTransition && void 0 === e.msTransition || !0 === i.options.useCSS && (i.cssTransitions = !0), i.options.fade && ("number" == typeof i.options.zIndex ? i.options.zIndex < 3 && (i.options.zIndex = 3) : i.options.zIndex = i.defaults.zIndex), void 0 !== e.OTransform && (i.animType = "OTransform", i.transformType = "-o-transform", i.transitionType = "OTransition", void 0 === e.perspectiveProperty && void 0 === e.webkitPerspective && (i.animType = !1)), void 0 !== e.MozTransform && (i.animType = "MozTransform", i.transformType = "-moz-transform", i.transitionType = "MozTransition", void 0 === e.perspectiveProperty && void 0 === e.MozPerspective && (i.animType = !1)), void 0 !== e.webkitTransform && (i.animType = "webkitTransform", i.transformType = "-webkit-transform", i.transitionType = "webkitTransition", void 0 === e.perspectiveProperty && void 0 === e.webkitPerspective && (i.animType = !1)), void 0 !== e.msTransform && (i.animType = "msTransform", i.transformType = "-ms-transform", i.transitionType = "msTransition", void 0 === e.msTransform && (i.animType = !1)), void 0 !== e.transform && !1 !== i.animType && (i.animType = "transform", i.transformType = "transform", i.transitionType = "transition"), i.transformsEnabled = i.options.useTransform && null !== i.animType && !1 !== i.animType
    }, e.prototype.setSlideClasses = function (i) {
        var e, t, o, s, n = this;
        if (t = n.$slider.find(".slick-slide").removeClass("slick-active slick-center slick-current").attr("aria-hidden", "true"), n.$slides.eq(i).addClass("slick-current"), !0 === n.options.centerMode) {
            var r = n.options.slidesToShow % 2 == 0 ? 1 : 0;
            e = Math.floor(n.options.slidesToShow / 2), !0 === n.options.infinite && (i >= e && i <= n.slideCount - 1 - e ? n.$slides.slice(i - e + r, i + e + 1).addClass("slick-active").attr("aria-hidden", "false") : (o = n.options.slidesToShow + i, t.slice(o - e + 1 + r, o + e + 2).addClass("slick-active").attr("aria-hidden", "false")), 0 === i ? t.eq(t.length - 1 - n.options.slidesToShow).addClass("slick-center") : i === n.slideCount - 1 && t.eq(n.options.slidesToShow).addClass("slick-center")), n.$slides.eq(i).addClass("slick-center")
        } else i >= 0 && i <= n.slideCount - n.options.slidesToShow ? n.$slides.slice(i, i + n.options.slidesToShow).addClass("slick-active").attr("aria-hidden", "false") : t.length <= n.options.slidesToShow ? t.addClass("slick-active").attr("aria-hidden", "false") : (s = n.slideCount % n.options.slidesToShow, o = !0 === n.options.infinite ? n.options.slidesToShow + i : i, n.options.slidesToShow == n.options.slidesToScroll && n.slideCount - i < n.options.slidesToShow ? t.slice(o - (n.options.slidesToShow - s), o + s).addClass("slick-active").attr("aria-hidden", "false") : t.slice(o, o + n.options.slidesToShow).addClass("slick-active").attr("aria-hidden", "false"));
        "ondemand" !== n.options.lazyLoad && "anticipated" !== n.options.lazyLoad || n.lazyLoad()
    }, e.prototype.setupInfinite = function () {
        var e, t, o, s = this;
        if (!0 === s.options.fade && (s.options.centerMode = !1), !0 === s.options.infinite && !1 === s.options.fade && (t = null, s.slideCount > s.options.slidesToShow)) {
            for (o = !0 === s.options.centerMode ? s.options.slidesToShow + 1 : s.options.slidesToShow, e = s.slideCount; e > s.slideCount - o; e -= 1) t = e - 1, i(s.$slides[t]).clone(!0).attr("id", "").attr("data-slick-index", t - s.slideCount).prependTo(s.$slideTrack).addClass("slick-cloned");
            for (e = 0; e < o + s.slideCount; e += 1) t = e, i(s.$slides[t]).clone(!0).attr("id", "").attr("data-slick-index", t + s.slideCount).appendTo(s.$slideTrack).addClass("slick-cloned");
            s.$slideTrack.find(".slick-cloned").find("[id]").each(function () {
                i(this).attr("id", "")
            })
        }
    }, e.prototype.interrupt = function (i) {
        var e = this;
        i || e.autoPlay(), e.interrupted = i
    }, e.prototype.selectHandler = function (e) {
        var t = this, o = i(e.target).is(".slick-slide") ? i(e.target) : i(e.target).parents(".slick-slide"),
            s = parseInt(o.attr("data-slick-index"));
        s || (s = 0), t.slideCount <= t.options.slidesToShow ? t.slideHandler(s, !1, !0) : t.slideHandler(s)
    }, e.prototype.slideHandler = function (i, e, t) {
        var o, s, n, r, l, d = null, a = this;
        if (e = e || !1, !(!0 === a.animating && !0 === a.options.waitForAnimate || !0 === a.options.fade && a.currentSlide === i)) if (!1 === e && a.asNavFor(i), o = i, d = a.getLeft(o), r = a.getLeft(a.currentSlide), a.currentLeft = null === a.swipeLeft ? r : a.swipeLeft, !1 === a.options.infinite && !1 === a.options.centerMode && (i < 0 || i > a.getDotCount() * a.options.slidesToScroll)) !1 === a.options.fade && (o = a.currentSlide, !0 !== t ? a.animateSlide(r, function () {
            a.postSlide(o)
        }) : a.postSlide(o)); else if (!1 === a.options.infinite && !0 === a.options.centerMode && (i < 0 || i > a.slideCount - a.options.slidesToScroll)) !1 === a.options.fade && (o = a.currentSlide, !0 !== t ? a.animateSlide(r, function () {
            a.postSlide(o)
        }) : a.postSlide(o)); else {
            if (a.options.autoplay && clearInterval(a.autoPlayTimer), s = o < 0 ? a.slideCount % a.options.slidesToScroll != 0 ? a.slideCount - a.slideCount % a.options.slidesToScroll : a.slideCount + o : o >= a.slideCount ? a.slideCount % a.options.slidesToScroll != 0 ? 0 : o - a.slideCount : o, a.animating = !0, a.$slider.trigger("beforeChange", [a, a.currentSlide, s]), n = a.currentSlide, a.currentSlide = s, a.setSlideClasses(a.currentSlide), a.options.asNavFor && (l = (l = a.getNavTarget()).slick("getSlick")).slideCount <= l.options.slidesToShow && l.setSlideClasses(a.currentSlide), a.updateDots(), a.updateArrows(), !0 === a.options.fade) return !0 !== t ? (a.fadeSlideOut(n), a.fadeSlide(s, function () {
                a.postSlide(s)
            })) : a.postSlide(s), void a.animateHeight();
            !0 !== t ? a.animateSlide(d, function () {
                a.postSlide(s)
            }) : a.postSlide(s)
        }
    }, e.prototype.startLoad = function () {
        var i = this;
        !0 === i.options.arrows && i.slideCount > i.options.slidesToShow && (i.$prevArrow.hide(), i.$nextArrow.hide()), !0 === i.options.dots && i.slideCount > i.options.slidesToShow && i.$dots.hide(), i.$slider.addClass("slick-loading")
    }, e.prototype.swipeDirection = function () {
        var i, e, t, o, s = this;
        return i = s.touchObject.startX - s.touchObject.curX, e = s.touchObject.startY - s.touchObject.curY, t = Math.atan2(e, i), (o = Math.round(180 * t / Math.PI)) < 0 && (o = 360 - Math.abs(o)), o <= 45 && o >= 0 ? !1 === s.options.rtl ? "left" : "right" : o <= 360 && o >= 315 ? !1 === s.options.rtl ? "left" : "right" : o >= 135 && o <= 225 ? !1 === s.options.rtl ? "right" : "left" : !0 === s.options.verticalSwiping ? o >= 35 && o <= 135 ? "down" : "up" : "vertical"
    }, e.prototype.swipeEnd = function (i) {
        var e, t, o = this;
        if (o.dragging = !1, o.swiping = !1, o.scrolling) return o.scrolling = !1, !1;
        if (o.interrupted = !1, o.shouldClick = !(o.touchObject.swipeLength > 10), void 0 === o.touchObject.curX) return !1;
        if (!0 === o.touchObject.edgeHit && o.$slider.trigger("edge", [o, o.swipeDirection()]), o.touchObject.swipeLength >= o.touchObject.minSwipe) {
            switch (t = o.swipeDirection()) {
                case"left":
                case"down":
                    e = o.options.swipeToSlide ? o.checkNavigable(o.currentSlide + o.getSlideCount()) : o.currentSlide + o.getSlideCount(), o.currentDirection = 0;
                    break;
                case"right":
                case"up":
                    e = o.options.swipeToSlide ? o.checkNavigable(o.currentSlide - o.getSlideCount()) : o.currentSlide - o.getSlideCount(), o.currentDirection = 1
            }
            "vertical" != t && (o.slideHandler(e), o.touchObject = {}, o.$slider.trigger("swipe", [o, t]))
        } else o.touchObject.startX !== o.touchObject.curX && (o.slideHandler(o.currentSlide), o.touchObject = {})
    }, e.prototype.swipeHandler = function (i) {
        var e = this;
        if (!(!1 === e.options.swipe || "ontouchend" in document && !1 === e.options.swipe || !1 === e.options.draggable && -1 !== i.type.indexOf("mouse"))) switch (e.touchObject.fingerCount = i.originalEvent && void 0 !== i.originalEvent.touches ? i.originalEvent.touches.length : 1, e.touchObject.minSwipe = e.listWidth / e.options.touchThreshold, !0 === e.options.verticalSwiping && (e.touchObject.minSwipe = e.listHeight / e.options.touchThreshold), i.data.action) {
            case"start":
                e.swipeStart(i);
                break;
            case"move":
                e.swipeMove(i);
                break;
            case"end":
                e.swipeEnd(i)
        }
    }, e.prototype.swipeMove = function (i) {
        var e, t, o, s, n, r, l = this;
        return n = void 0 !== i.originalEvent ? i.originalEvent.touches : null, !(!l.dragging || l.scrolling || n && 1 !== n.length) && (e = l.getLeft(l.currentSlide), l.touchObject.curX = void 0 !== n ? n[0].pageX : i.clientX, l.touchObject.curY = void 0 !== n ? n[0].pageY : i.clientY, l.touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(l.touchObject.curX - l.touchObject.startX, 2))), r = Math.round(Math.sqrt(Math.pow(l.touchObject.curY - l.touchObject.startY, 2))), !l.options.verticalSwiping && !l.swiping && r > 4 ? (l.scrolling = !0, !1) : (!0 === l.options.verticalSwiping && (l.touchObject.swipeLength = r), t = l.swipeDirection(), void 0 !== i.originalEvent && l.touchObject.swipeLength > 4 && (l.swiping = !0, i.preventDefault()), s = (!1 === l.options.rtl ? 1 : -1) * (l.touchObject.curX > l.touchObject.startX ? 1 : -1), !0 === l.options.verticalSwiping && (s = l.touchObject.curY > l.touchObject.startY ? 1 : -1), o = l.touchObject.swipeLength, l.touchObject.edgeHit = !1, !1 === l.options.infinite && (0 === l.currentSlide && "right" === t || l.currentSlide >= l.getDotCount() && "left" === t) && (o = l.touchObject.swipeLength * l.options.edgeFriction, l.touchObject.edgeHit = !0), !1 === l.options.vertical ? l.swipeLeft = e + o * s : l.swipeLeft = e + o * (l.$list.height() / l.listWidth) * s, !0 === l.options.verticalSwiping && (l.swipeLeft = e + o * s), !0 !== l.options.fade && !1 !== l.options.touchMove && (!0 === l.animating ? (l.swipeLeft = null, !1) : void l.setCSS(l.swipeLeft))))
    }, e.prototype.swipeStart = function (i) {
        var e, t = this;
        if (t.interrupted = !0, 1 !== t.touchObject.fingerCount || t.slideCount <= t.options.slidesToShow) return t.touchObject = {}, !1;
        void 0 !== i.originalEvent && void 0 !== i.originalEvent.touches && (e = i.originalEvent.touches[0]), t.touchObject.startX = t.touchObject.curX = void 0 !== e ? e.pageX : i.clientX, t.touchObject.startY = t.touchObject.curY = void 0 !== e ? e.pageY : i.clientY, t.dragging = !0
    }, e.prototype.unfilterSlides = e.prototype.slickUnfilter = function () {
        var i = this;
        null !== i.$slidesCache && (i.unload(), i.$slideTrack.children(this.options.slide).detach(), i.$slidesCache.appendTo(i.$slideTrack), i.reinit())
    }, e.prototype.unload = function () {
        var e = this;
        i(".slick-cloned", e.$slider).remove(), e.$dots && e.$dots.remove(), e.$prevArrow && e.htmlExpr.test(e.options.prevArrow) && e.$prevArrow.remove(), e.$nextArrow && e.htmlExpr.test(e.options.nextArrow) && e.$nextArrow.remove(), e.$slides.removeClass("slick-slide slick-active slick-visible slick-current").attr("aria-hidden", "true").css("width", "")
    }, e.prototype.unslick = function (i) {
        var e = this;
        e.$slider.trigger("unslick", [e, i]), e.destroy()
    }, e.prototype.updateArrows = function () {
        var i = this;
        Math.floor(i.options.slidesToShow / 2), !0 === i.options.arrows && i.slideCount > i.options.slidesToShow && !i.options.infinite && (i.$prevArrow.removeClass("slick-disabled").attr("aria-disabled", "false"), i.$nextArrow.removeClass("slick-disabled").attr("aria-disabled", "false"), 0 === i.currentSlide ? (i.$prevArrow.addClass("slick-disabled").attr("aria-disabled", "true"), i.$nextArrow.removeClass("slick-disabled").attr("aria-disabled", "false")) : i.currentSlide >= i.slideCount - i.options.slidesToShow && !1 === i.options.centerMode ? (i.$nextArrow.addClass("slick-disabled").attr("aria-disabled", "true"), i.$prevArrow.removeClass("slick-disabled").attr("aria-disabled", "false")) : i.currentSlide >= i.slideCount - 1 && !0 === i.options.centerMode && (i.$nextArrow.addClass("slick-disabled").attr("aria-disabled", "true"), i.$prevArrow.removeClass("slick-disabled").attr("aria-disabled", "false")))
    }, e.prototype.updateDots = function () {
        var i = this;
        null !== i.$dots && (i.$dots.find("li").removeClass("slick-active").end(), i.$dots.find("li").eq(Math.floor(i.currentSlide / i.options.slidesToScroll)).addClass("slick-active"))
    }, e.prototype.visibility = function () {
        var i = this;
        i.options.autoplay && (document[i.hidden] ? i.interrupted = !0 : i.interrupted = !1)
    }, i.fn.slick = function () {
        var i, t, o = this, s = arguments[0], n = Array.prototype.slice.call(arguments, 1), r = o.length;
        for (i = 0; i < r; i++) if ("object" == typeof s || void 0 === s ? o[i].slick = new e(o[i], s) : t = o[i].slick[s].apply(o[i].slick, n), void 0 !== t) return t;
        return o
    }
});

/**
 * jQuery gallery v2.3.6
 * Licensed under the MIT License:
 * http://www.opensource.org/licenses/mit-license.php
 **/

;(function ($) {
    var _installDirections = function (data) {
            data.holdWidth = data.list.parent().outerWidth();
            data.woh = data.elements.outerWidth(true);
            if (!data.direction) data.parentSize = data.holdWidth; else {
                data.woh = data.elements.outerHeight(true);
                data.parentSize = data.list.parent().height()
            }
            data.wrapHolderW = Math.ceil(data.parentSize / data.woh);
            if ((data.wrapHolderW - 1) * data.woh + data.woh / 2 > data.parentSize) data.wrapHolderW--;
            if (data.wrapHolderW == 0) data.wrapHolderW = 1
        }, _dirAnimate = function (data) {
            if (!data.direction) return {
                left: -(data.woh *
                    data.active)
            }; else return {top: -(data.woh * data.active)}
        }, _initDisableBtn = function (data) {
            data.prevBtn.removeClass(data.disableBtn);
            data.nextBtn.removeClass(data.disableBtn);
            if (data.active == 0 || data.count + 1 == data.wrapHolderW - 1) data.prevBtn.addClass(data.disableBtn);
            if (data.active == 0 && data.count + 1 == 1 || data.count + 1 <= data.wrapHolderW - 1) data.nextBtn.addClass(data.disableBtn);
            if (data.active == data.rew) data.nextBtn.addClass(data.disableBtn)
        }, _initEvent = function (data, btn, side) {
            btn.bind(data.event + ".gallery" +
                data.timeStamp, function () {
                if (data.flag) {
                    if (data.infinite) data.flag = false;
                    if (data._t) clearTimeout(data._t);
                    _toPrepare(data, side);
                    if (data.autoRotation) _runTimer(data);
                    if (typeof data.onChange == "function") data.onChange({data: data})
                }
                if (data.event == "click") return false
            })
        }, _initEventSwitcher = function (data) {
            data.switcher.bind(data.event + ".gallery" + data.timeStamp, function () {
                if (data.flag && !$(this).hasClass(data.activeClass)) {
                    if (data.infinite) data.flag = false;
                    data.active = data.switcher.index(jQuery(this)) * data.slideElement;
                    if (data.infinite) data.active = data.switcher.index(jQuery(this)) + data.count;
                    if (data._t) clearTimeout(data._t);
                    if (data.disableBtn) _initDisableBtn(data);
                    if (!data.effect) _scrollElement(data); else _fadeElement(data);
                    if (data.autoRotation) _runTimer(data);
                    if (typeof data.onChange == "function") data.onChange({data: data})
                }
                if (data.event == "click") return false
            })
        }, _toPrepare = function (data, side) {
            if (!data.infinite) {
                if (data.active == data.rew && data.circle && side) data.active = -data.slideElement;
                if (data.active == 0 && data.circle &&
                    !side) data.active = data.rew + data.slideElement;
                for (var i = 0; i < data.slideElement; i++) if (side) {
                    if (data.active + 1 <= data.rew) data.active++
                } else if (data.active - 1 >= 0) data.active--
            } else {
                if (data.active >= data.count + data.count && side) data.active -= data.count;
                if (data.active <= data.count - 1 && !side) data.active += data.count;
                data.list.css(_dirAnimate(data));
                if (side) data.active += data.slideElement; else data.active -= data.slideElement
            }
            if (data.disableBtn) _initDisableBtn(data);
            if (!data.effect) _scrollElement(data); else _fadeElement(data)
        },
        _fadeElement = function (data) {
            data.list.removeClass(data.activeClass).css({zIndex: 1});
            data.list.eq(data.last).stop().css({zIndex: 2, opacity: 1});
            if (data.effect == "transparent") data.list.eq(data.last).animate({opacity: 0}, {
                queue: false,
                duration: data.duration
            });
            data.list.eq(data.active).addClass(data.activeClass).css({
                opacity: 0,
                zIndex: 3
            }).animate({opacity: 1}, {
                queue: false, duration: data.duration, complete: function () {
                    jQuery(this).css("opacity", "auto")
                }
            });
            if (data.autoHeight) data.list.parent().animate({height: data.list.eq(data.active).outerHeight()},
                {queue: false, duration: data.duration});
            if (data.switcher) data.switcher.removeClass(data.activeClass).eq(data.active).addClass(data.activeClass);
            data.last = data.active
        }, _scrollElement = function (data) {
            data.elements.removeClass("active").eq(data.active).addClass(data.activeClass);
            if (!data.infinite) data.list.animate(_dirAnimate(data), {queue: false, duration: data.duration}); else {
                data.list.animate(_dirAnimate(data), data.duration, function () {
                    if (data.active >= data.count + data.count) data.active -= data.count;
                    if (data.active <=
                        data.count - 1) data.active += data.count;
                    data.list.css(_dirAnimate(data));
                    data.flag = true
                });
                data.elements.eq(data.active - data.count).addClass(data.activeClass);
                data.elements.eq(data.active + data.count).addClass(data.activeClass)
            }
            if (data.autoHeight) data.list.parent().animate({height: data.list.children().eq(data.active).outerHeight()}, {
                queue: false,
                duration: data.duration
            });
            if (data.switcher) if (!data.infinite) data.switcher.removeClass(data.activeClass).eq(Math.ceil(data.active / data.slideElement)).addClass(data.activeClass);
            else {
                data.switcher.removeClass(data.activeClass).eq(data.active - data.count).addClass(data.activeClass);
                data.switcher.removeClass(data.activeClass).eq(data.active - data.count - data.count).addClass(data.activeClass);
                data.switcher.eq(data.active).addClass(data.activeClass)
            }
        }, _runTimer = function (data) {
            if (data._t) clearTimeout(data._t);
            data._t = setInterval(function () {
                if (data.infinite) data.flag = false;
                _toPrepare(data, true);
                if (typeof data.onChange == "function") data.onChange({data: data})
            }, data.autoRotation)
        }, _rePosition =
            function (data) {
                if (data.flexible && !data.direction) {
                    _installDirections(data);
                    if (data.oneSlide) data.elements.css({width: data.holdWidth}); else if (data.elements.length * data.minWidth > data.holdWidth) {
                        data.elements.css({width: Math.floor(data.holdWidth / Math.floor(data.holdWidth / data.minWidth))});
                        if (data.elements.outerWidth(true) > Math.floor(data.holdWidth / Math.floor(data.holdWidth / data.minWidth))) data.elements.css({
                            width: Math.floor(data.holdWidth / Math.floor(data.holdWidth / data.minWidth)) - (data.elements.outerWidth(true) -
                                Math.floor(data.holdWidth / Math.floor(data.holdWidth / data.minWidth)))
                        })
                    } else {
                        data.active = 0;
                        data.elements.css({width: Math.floor(data.holdWidth / data.elements.length)})
                    }
                }
                _installDirections(data);
                if (!data.effect) {
                    data.rew = data.count - data.wrapHolderW + 1;
                    if (data.active > data.rew && !data.infinite) data.active = data.rew;
                    if (data.active - data.count > data.rew && data.infinite) data.active = data.rew;
                    data.list.css({position: "relative"}).css(_dirAnimate(data));
                    if (data.autoHeight) data.list.parent().css({height: data.list.children().eq(data.active).outerHeight()})
                } else {
                    data.rew =
                        data.count;
                    data.list.css({opacity: 0}).removeClass(data.activeClass).eq(data.active).addClass(data.activeClass).css({opacity: 1}).css("opacity", "auto");
                    if (data.autoHeight) data.list.parent().css({height: data.list.eq(data.active).outerHeight()})
                }
                if (data.switcher) if (!data.infinite) data.switcher.removeClass(data.activeClass).eq(Math.ceil(data.active / data.slideElement)).addClass(data.activeClass); else {
                    data.switcher.removeClass(data.activeClass).eq(data.active - data.count).addClass(data.activeClass);
                    data.switcher.removeClass(data.activeClass).eq(data.active -
                        data.count - data.count).addClass(data.activeClass);
                    data.switcher.eq(data.active).addClass(data.activeClass)
                }
                if (data.disableBtn) _initDisableBtn(data);
                if (data.rew <= 0 && !data.effect) data.list.css({left: 0})
            }, _initTouchEvent = function (data) {
            var touchOnGallery = false;
            var startTouchPos, listPosNow, side, start;
            var span = data.list.parent().find("span.gallery-touch-holder");
            if (span.length == 0) {
                span = $("<span></span>");
                span.css({
                    position: "absolute",
                    left: 0,
                    top: 0,
                    width: 9999,
                    height: 9999,
                    cursor: "pointer",
                    zIndex: 9999,
                    display: "none"
                }).addClass("gallery-touch-holder");
                data.list.parent().append(span)
            }
            data.list.parent().css({position: "relative"});
            data.list.bind("mousedown.gallery" + data.timeStamp + " touchstart.gallery" + data.timeStamp, function (e) {
                touchOnGallery = true;
                startTouchPos = e.originalEvent.touches ? e.originalEvent.touches[0].pageX : e.pageX;
                data.list.stop();
                start = 0;
                listPosNow = data.list.position().left;
                if (e.type == "mousedown") e.preventDefault()
            });
            $(document).bind("mousemove.gallery" + data.timeStamp + " touchmove.gallery" + data.timeStamp, function (e) {
                if (touchOnGallery &&
                    Math.abs(startTouchPos - (e.originalEvent.touches ? e.originalEvent.touches[0].pageX : e.pageX)) > 10) {
                    span.css({display: "block"});
                    start = (e.originalEvent.touches ? e.originalEvent.touches[0].pageX : e.pageX) - startTouchPos;
                    if (!data.effect) data.list.css({left: listPosNow + start});
                    return false
                }
            }).bind("mouseup.gallery" + data.timeStamp + " touchend.gallery" + data.timeStamp, function (e) {
                if (touchOnGallery && span.is(":visible")) {
                    span.css({display: "none"});
                    if (!data.infinite) if (!data.effect) if (data.list.position().left > 0) {
                        data.active =
                            0;
                        _scrollElement(data)
                    } else if (data.list.position().left < -data.woh * data.rew) {
                        data.active = data.rew;
                        _scrollElement(data)
                    } else {
                        data.active = Math.floor(data.list.position().left / -data.woh);
                        if (start < 0) data.active += 1;
                        _scrollElement(data)
                    } else {
                        if (start < 0) _toPrepare(data, true);
                        if (start > 0) _toPrepare(data, false)
                    } else {
                        if (data.list.position().left > -data.woh * data.count) data.list.css({left: data.list.position().left - data.woh * data.count});
                        if (data.list.position().left < -data.woh * data.count * 2) data.list.css({
                            left: data.list.position().left +
                                data.woh * data.count
                        });
                        data.active = Math.floor(data.list.position().left / -data.woh);
                        if (start < 0) data.active += 1;
                        _scrollElement(data)
                    }
                    if (data.disableBtn) _initDisableBtn(data);
                    if (typeof data.onChange == "function") data.onChange({data: data});
                    if (data.autoRotation) _runTimer(data);
                    touchOnGallery = false
                } else touchOnGallery = false
            })
        }, methods = {
            init: function (options) {
                return this.each(function (i) {
                    var $this = $(this);
                    $this.data("gallery", jQuery.extend({}, defaults, options));
                    var data = $this.data("gallery");
                    data.aR = data.autoRotation;
                    data.context = $this;
                    data.timeStamp = (new Date).getTime() + i;
                    data.list = data.context.find(data.elements);
                    data.elements = data.list;
                    if (data.elements.css("position") == "absolute" && data.autoDetect && !data.effect) data.effect = true;
                    data.count = data.list.index(data.list.filter(":last"));
                    if (!data.effect) data.list = data.list.parent();
                    data.switcher = data.context.find(data.switcher);
                    if (data.switcher.length == 0) data.switcher = false;
                    if (data.nextBtn) data.nextBtn = data.context.find(data.nextBtn);
                    if (data.prevBtn) data.prevBtn = data.context.find(data.prevBtn);
                    if (data.switcher) data.active = data.switcher.index(data.switcher.filter("." + data.activeClass + ":eq(0)")); else data.active = data.elements.index(data.elements.filter("." + data.activeClass + ":eq(0)"));
                    if (data.active < 0) data.active = 0;
                    data.last = data.active;
                    if (data.oneSlide) data.flexible = true;
                    if (data.flexible && !data.direction) data.minWidth = data.elements.outerWidth(true);
                    _rePosition(data);
                    if (data.flexible && !data.direction) $(window).bind("resize.gallery" + data.timeStamp, function () {
                        _rePosition(data)
                    });
                    data.flag = true;
                    if (data.infinite) {
                        data.count++;
                        data.active += data.count;
                        data.list.append(data.elements.clone().addClass("gallery-clone"));
                        data.list.append(data.elements.clone().addClass("gallery-clone"));
                        data.list.css(_dirAnimate(data));
                        data.elements = data.list.children()
                    }
                    if (data.rew <= 0 && !data.effect) data.list.css({left: 0}); else {
                        if (data.list.length <= 1 && data.effect) return $this;
                        if (data.nextBtn) _initEvent(data, data.nextBtn, true);
                        if (data.prevBtn) _initEvent(data, data.prevBtn, false);
                        if (data.switcher) _initEventSwitcher(data);
                        if (data.autoRotation) _runTimer(data);
                        if (data.touch) _initTouchEvent(data);
                        if (typeof data.onChange == "function") data.onChange({data: data})
                    }
                })
            }, option: function (name, set) {
                if (set) return this.each(function () {
                    var data = $(this).data("gallery");
                    if (data) data[name] = set
                }); else {
                    var ar = [];
                    this.each(function () {
                        var data = $(this).data("gallery");
                        if (data) ar.push(data[name])
                    });
                    if (ar.length > 1) return ar; else return ar[0]
                }
            }, destroy: function () {
                return this.each(function () {
                    var $this = $(this), data = $this.data("gallery");
                    if (data) {
                        if (data._t) clearTimeout(data._t);
                        data.context.find("*").unbind(".gallery" + data.timeStamp);
                        $(window).unbind(".gallery" + data.timeStamp);
                        $(document).unbind(".gallery" + data.timeStamp);
                        data.elements.removeAttr("style");
                        if (data.infinite) data.elements.filter(".gallery-clone").remove();
                        data.list.removeAttr("style");
                        $this.removeData("gallery")
                    }
                })
            }, rePosition: function () {
                return this.each(function () {
                    var $this = $(this), data = $this.data("gallery");
                    _rePosition(data)
                })
            }, stop: function () {
                return this.each(function () {
                    var $this = $(this), data = $this.data("gallery");
                    data.aR = data.autoRotation;
                    data.autoRotation = false;
                    if (data._t) clearTimeout(data._t)
                })
            }, play: function (time) {
                return this.each(function () {
                    var $this = $(this), data = $this.data("gallery");
                    if (data._t) clearTimeout(data._t);
                    data.autoRotation = time ? time : data.aR;
                    if (data.autoRotation) _runTimer(data)
                })
            }, next: function (element) {
                return this.each(function () {
                    var $this = $(this), data = $this.data("gallery");
                    if (element != "undefined" && element > -1) {
                        data.active = element;
                        if (data.disableBtn) _initDisableBtn(data);
                        if (!data.effect) _scrollElement(data);
                        else _fadeElement(data)
                    } else if (data.flag) {
                        if (data.infinite) data.flag = false;
                        if (data._t) clearTimeout(data._t);
                        _toPrepare(data, true);
                        if (data.autoRotation) _runTimer(data);
                        if (typeof data.onChange == "function") data.onChange({data: data})
                    }
                })
            }, prev: function () {
                return this.each(function () {
                    var $this = $(this), data = $this.data("gallery");
                    if (data.flag) {
                        if (data.infinite) data.flag = false;
                        if (data._t) clearTimeout(data._t);
                        _toPrepare(data, false);
                        if (data.autoRotation) _runTimer(data);
                        if (typeof data.onChange == "function") data.onChange({data: data})
                    }
                })
            }
        },
        defaults = {
            infinite: false,
            activeClass: "active",
            duration: 300,
            slideElement: 1,
            autoRotation: false,
            effect: false,
            elements: "ul:eq(0) > li",
            switcher: ".switcher > li",
            disableBtn: false,
            nextBtn: "a.link-next, a.btn-next, .next",
            prevBtn: "a.link-prev, a.btn-prev, .prev",
            circle: true,
            direction: false,
            event: "click",
            autoHeight: false,
            flexible: false,
            oneSlide: false,
            autoDetect: true,
            touch: true,
            onChange: null
        };
    $.fn.gallery = function (method) {
        if (methods[method]) return methods[method].apply(this, Array.prototype.slice.call(arguments,
            1)); else if (typeof method === "object" || !method) return methods.init.apply(this, arguments); else $.error("Method " + method + " does not exist on jQuery.gallery")
    }
})(jQuery);
